---

# Done before nginx is installed because it will fail to start in the next play if the module doesn't exist
- name: Install nginx mod_zip
  hosts: galaxywebservers
  remote_user: root
  tasks:
    - name: Install ngx_http_zip_moodule.so
      ansible.builtin.get_url:
        url: "{{ nginx_mod_zip_url }}"
        dest: /usr/lib64/nginx/modules/ngx_http_zip_module.so
        mode: 0755
      when: nginx_mod_zip_url is defined
  tags: nginx

- name: Install and manage nginx
  hosts: webservers
  remote_user: root
  vars_files:
    # for tiaas_nginx_routes used by templates
    - "{{ playbook_dir }}/../../roles/galaxyproject.tiaas2/defaults/main.yml"
  pre_tasks:
    # because loading the defaults above clears the tiaas_* vars in group_vars. set as a fact because vars is lower
    # precedence than vars_files
    - set_fact:
        tiaas_dir: "/srv/tiaas/{{ galaxy_instance_codename }}"
      when: galaxy_instance_codename is defined
  roles:
    - paths   # for certbot_well_known_root + tacc_protected in test env
    - copy    # for tacc_protected in test env
    - galaxyproject.nginx
  tags: nginx

- name: Install logflux
  hosts: logfluxservers
  remote_user: root
  roles:
    - users
    - paths
    - logflux
  tags: logflux

- name: Manage Galaxy root tasks
  hosts: galaxyservers
  remote_user: root
  roles:
    - paths   # creates toolshed_tmpdir
    - usegalaxy_admin
    - cron
  tags: galaxy,admin

- name: Manage Galaxy root tasks
  hosts: galaxyservers
  remote_user: root
  tasks:
    - name: Create Gravity config dir
      file:
        path: /etc/galaxy/gravity.d
        state: directory
        mode: "0755"
      remote_user: root
    - name: Install Gravity config
      template:
        src: "templates/galaxy/config/gravity.yml.j2"
        dest: "{{ gravity_config_file }}"
        mode: "0644"
      notify:
        - galaxyctl update
        - restart galaxy
    - name: Install Gravity (external)
      pip:
        name:
          - "{{ gravity_package | default('gravity') }}"
          # FIXME: this is only necessary on EL < 8
          - "urllib3<2"
        virtualenv: "{{ gravity_venv_dir }}"
        virtualenv_command: "{{ gravity_virtualenv_command | default(galaxy_virtualenv_command | default(pip_virtualenv_command | default(omit))) }}"
      environment:
        VIRTUAL_ENV: "{{ galaxy_venv_dir }}"
      when: gravity_venv_dir is defined
    - name: Deploy galaxyctl wrapper script
      copy:
        content: |
          #!/usr/bin/env sh
          export GRAVITY_CONFIG_FILE={{ gravity_config_file | quote }}
          exec {{ galaxy_gravity_command | quote }} "$@"
        dest: "/usr/local/bin/galaxyctl-{{ galaxy_instance_codename }}"
        mode: "0755"
      when: galaxy_gravity_wrapper_path is not none
  handlers:
    - name: galaxyctl update
      remote_user: root
      command: "{{ galaxy_gravity_command }} update"
    - name: galaxy gravity restart
      remote_user: root
      command: "{{ galaxy_gravity_command }} graceful"
      environment:
        GRAVITY_CONFIG_FILE: "{{ gravity_config_file }}"
      listen: "restart galaxy"
  tags:
    - galaxy
    - gravity

- name: Configure TIaaS
  hosts: tiaasservers
  remote_user: root
  roles:
    - galaxyproject.tiaas2
  tags: tiaas

- name: install tusd
  hosts: galaxywebservers:galaxystagingservers:galaxy-vgp.tacc.utexas.edu
  remote_user: root
  roles:
    - galaxyproject.tusd
  tags: tusd

- name: Manage supervisor and root tasks
  hosts: supervisorservers
  remote_user: root
  roles:
    - supervisor
  tags: supervisor

- name: Kubernetes deployment
  hosts: kubedeployers
  gather_facts: false
  tasks:
    - name: Deploy resources
      kubernetes.core.k8s:
        state: "{{ item.state | default('present') }}"
        resource_definition: "{{ item.definition }}"
        kubeconfig: "{{ kubedeployer_kubeconfig }}"
      loop: "{{ kubernetes_deploy_resources | default([]) }}"
      loop_control:
        label: "{{ item.label | default(item.definition) }}"
      delegate_to: localhost
  tags: kubernetes,k8s
