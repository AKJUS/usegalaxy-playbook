---

#- name: Install and manage PostgreSQL
#  hosts: galaxy07.tacc.utexas.edu
#  remote_user: root
#  pre_tasks:
#    - name: Install psycopg2
#      yum:
#        name: python-psycopg2
#      when: ansible_os_family == 'RedHat'
#    - name: Install psycopg2
#      apt:
#        name: python3-psycopg2
#      when: ansible_os_family == "Debian"
#    # This is a dirty hack (but then, so are LX Brand zones, especially in 2020)
#    # NOTE: you'll have to SIGINT the first run of ansible-playbook when it hangs while starting postgres because the package install overwrites it. You will probably also need to restart postgresql@12-main to unstick it the second time.
#    - name: Force override PostgreSQL instance systemd service unit on LX Brand zones
#      copy:
#        src: systemd/postgresql@.service
#        dest: /lib/systemd/system/postgresql@.service
#        mode: "0644"
#        backup: true
#      when: ansible_system == "Linux" and ansible_virtualization_type == "zone" and ansible_os_family == "Debian"
#  roles:
#    - galaxyproject.postgresql
#  # FIXME: what was this doing here when we installed it above?? actually - probably have to do it after for PGDG? We'll
#  # find out soon
#  #tasks:
#  #  - name: Install psycopg2 for postgresql_objects
#  #    action:
#  #      module: "{{ 'yum' if ansible_os_family == 'RedHat' else 'apt' }}"
#  #      name: python-psycopg2
#  tags: postgres

- name: Manage PostgreSQL users, groups, databases, and permissions
  hosts: dbservers
  become: yes
  become_user: postgres
  roles:
    - galaxyproject.postgresql_objects
  post_tasks:
    - name: Install pgcrypto on Galaxy database
      postgresql_ext:
        name: pgcrypto
        db: "{{ galaxy_database_name }}"
  tags: postgres

# Done before nginx is installed because it will fail to start in the next play if the module doesn't exist
- name: Install nginx upload module
  hosts: galaxywebservers
  become: true
  tasks:
    - name: Install nginx-module-upload
      ansible.builtin.dnf:
        name: "{{ nginx_upload_module_url }}"
        disable_gpg_check: true
      when: nginx_upload_module_url is defined
  tags: nginx

- name: Install and manage nginx
  hosts: webservers
  become: true
  vars_files:
    # for tiaas_nginx_routes used by templates
    - "{{ playbook_dir }}/../../roles/galaxyproject.tiaas2/defaults/main.yml"
  pre_tasks:
    # because loading the defaults above clears the tiaas_* vars in group_vars. set as a fact because vars is lower
    # precedence than vars_files
    - set_fact:
        tiaas_dir: "/srv/tiaas/{{ galaxy_instance_codename }}"
      when: galaxy_instance_codename is defined
    # This should not be necessary - it is /var/lib/nginx/tmp/proxy, and even setting proxy_temp_path doesn't fix it. I
    # think this is harcoded in the upload module somewhere since it was built from pkg-oss?
    - name: Create /var/cache/nginx/proxy_temp
      file:
        path: /var/cache/nginx/proxy_temp
        owner: "{{ galaxy_user }}"
        mode: "0755"
        state: directory
  roles:
    - paths   # for certbot_well_known_root + tacc_protected in test env
    - copy    # for tacc_protected in test env
    - galaxyproject.nginx
  tags: nginx

#- name: Install logflux
#  hosts: logfluxservers
#  remote_user: root
#  roles:
#    - users
#    - paths
#    - logflux
#  tags: logflux

- name: Manage Galaxy root tasks
  hosts: galaxyservers
  become: true
  roles:
    - paths   # creates toolshed_tmpdir
    - usegalaxy_admin
    - cron

- name: Manage Gravity tasks
  hosts: galaxyservers
  become: true
  tasks:
    - name: Create Gravity config dir
      file:
        path: /etc/galaxy/gravity.d
        state: directory
        mode: "0755"
    - name: Install Gravity config
      template:
        src: "templates/galaxy/config/gravity.yml.j2"
        dest: "{{ gravity_config_file }}"
        mode: "0644"
      notify:
        - galaxyctl update
        - restart galaxy
    - name: Install Gravity (external)
      pip:
        name:
          - "{{ gravity_package | default('gravity') }}"
          # FIXME: this is only necessary on EL < 8
          - "urllib3<2"
        virtualenv: "{{ gravity_venv_dir }}"
        virtualenv_command: "{{ gravity_virtualenv_command | default(galaxy_virtualenv_command | default(pip_virtualenv_command | default(omit))) }}"
      environment:
        VIRTUAL_ENV: "{{ galaxy_venv_dir }}"
      when: gravity_venv_dir is defined
    - name: Deploy galaxyctl wrapper script
      copy:
        content: |
          #!/usr/bin/env sh
          export GRAVITY_CONFIG_FILE={{ gravity_config_file | quote }}
          exec {{ galaxy_gravity_command | quote }} "$@"
        dest: "/usr/local/bin/galaxyctl-{{ galaxy_instance_codename }}"
        mode: "0755"
      when: galaxy_gravity_wrapper_path is not none
  handlers:
    - name: galaxyctl update
      remote_user: root
      command: "{{ galaxy_gravity_command }} update"
    - name: galaxy gravity restart
      remote_user: root
      command: "{{ galaxy_gravity_command }} graceful"
      environment:
        GRAVITY_CONFIG_FILE: "{{ gravity_config_file }}"
      listen: "restart galaxy"
  tags:
    - galaxy
    - gravity

- name: Configure TIaaS
  hosts: tiaasservers
  become: true
  roles:
    - galaxyproject.tiaas2
  tags: tiaas

- name: install tusd
  hosts: galaxywebservers:galaxystagingservers:galaxy-vgp.tacc.utexas.edu
  become: true
  roles:
    - galaxyproject.tusd
  tags: tusd
