---

- name: Install and manage PostgreSQL
  hosts: dbservers
  remote_user: root
  pre_tasks:
    - name: Install psycopg2
      yum:
        name: python-psycopg2
      when: ansible_os_family == 'RedHat'
  roles:
    - galaxyproject.postgresql
  tasks:
    - name: Install psycopg2 for postgresql_objects
      action:
        module: "{{ 'yum' if ansible_os_family == 'RedHat' else 'apt' }}"
        name: python-psycopg2
  tags: postgres

- name: Manage PostgreSQL users, groups, databases, and permissions
  hosts: dbservers
  remote_user: root
  become: yes
  become_user: postgres
  roles:
    - natefoo.postgresql_objects
  tags: postgres

- name: Set sysctl values for uWSGI
  hosts: galaxywebservers:galaxystagingservers:toolshedwebservers
  remote_user: root
  tasks:
    - name: Set sysctl values
      sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        reload: no
        sysctl_set: yes
      with_items: "{{ sysctl_conf }}"

- name: Install and manage nginx
  hosts: webservers
  remote_user: root
  roles:
    - paths   # for certbot_well_known_root + tacc_protected in test env
    - copy    # for tacc_protected in test env
    - galaxyproject.nginx
  tags: nginx

- name: Tasks for SELinux and UNIX socket proxies
  # FIXME:
  #hosts: toolshedwebservers
  hosts: testtoolshed.galaxyproject.org
  remote_user: root
  tasks:
    - name: Add Tool Shed user to nginx group
      user:
        name: "{{ toolshed_user }}"
        groups: nginx
    # FIXME: AFAICT this should work but for some reason the writable socket doesn't and I don't have any more time to mess with it
    #- name: Allow nginx httpd_sys_content_t to access additional paths
    #  sefcontext:
    #    target: '{{ item.base }}{{ item.extra }}'
    #    setype: '{{ item.setype }}'
    #    state: present
    #  loop:
    #    - base: "{{ galaxy_errordocs_dest }}"
    #      extra: "(/.*)?"
    #      setype: httpd_sys_content_t
    #    - base: "{{ galaxy_toolshed_config.uwsgi.socket }}"
    #      extra: ""
    #      setype: httpd_sys_rw_content_t
    #  register: updated_fcontexts
    #- name: Apply new SELinux file context to system
    #  command: "restorecon -rv {{ item.item.base }}"
    #  loop: "{{ updated_fcontexts.results }}"
    #  when: item is changed
    # FIXME: using the insecure sledgehammer for now
    - name: Change httpd_t to permissive
      selinux_permissive:
        name: httpd_t
        permissive: true
  tags: nginx

- name: Install logflux
  hosts: logfluxservers
  remote_user: root
  roles:
    - users
    - paths
    - logflux
  tags: logflux

- name: Install and manage ProFTPD
  hosts: ftpservers
  remote_user: root
  roles:
    - galaxyproject.proftpd
  tags: proftpd

- name: Manage galaxy root tasks
  hosts: galaxyservers:toolshedservers
  remote_user: root
  roles:
    - paths   # creates toolshed_tmpdir
    - usegalaxy_admin
    - cron
  tags: galaxy,admin

- name: Install swarm scale playbook
  hosts: galaxyswarmscaleservers
  remote_user: root
  roles:
    - usegalaxy_swarmscale
  tags: galaxy,swarmscale

- name: Manage supervisor and root tasks
  hosts: supervisorservers
  remote_user: root
  roles:
    - supervisor
  tags: supervisor

- name: Configure zerg mode
  hosts: zergmodeservers
  remote_user: root
  roles:
    - zergmode
  tags: zergmode

- name: Manage supervisor and root tasks
  hosts: supervisorservers
  remote_user: root
  roles:
    - supervisor
  tags: supervisor
