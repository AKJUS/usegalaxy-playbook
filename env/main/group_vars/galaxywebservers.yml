---

## used by: supervisor
galaxywebservers_group_supervisor_configs: []

galaxywebservers_group_absent_supervisor_configs:
  - galaxy
  - galaxy_impersonate
  - galaxy_group

nginx_conf_http:
  server_names_hash_bucket_size: 128
  gzip: 'on'
  gzip_vary: 'on'
  gzip_proxied: any
  gzip_comp_level: 6
  gzip_buffers: 16 8k
  gzip_http_version: 1.1
  gzip_types: text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript
  client_max_body_size: "{{ nginx_conf_client_max_body_size }}"
  proxy_read_timeout: 600
  limit_req_zone: "$binary_remote_addr zone=strict:10m rate=1r/s"

nginx_conf_ssl_protocols:
  - TLSv1.2

nginx_conf_ssl_ciphers:
  - ECDHE-ECDSA-AES128-GCM-SHA256
  - ECDHE-RSA-AES128-GCM-SHA256
  - ECDHE-ECDSA-AES256-GCM-SHA384
  - ECDHE-RSA-AES256-GCM-SHA384
  - ECDHE-ECDSA-CHACHA20-POLY1305
  - ECDHE-RSA-CHACHA20-POLY1305
  - DHE-RSA-AES128-GCM-SHA256
  - DHE-RSA-AES256-GCM-SHA384

nginx_mod_zip_url: https://github.com/natefoo/mod-zip-dso/raw/main/nginx-1.12.2-el7/ngx_http_zip_module.so
nginx_load_modules:
  - order: 50
    path: ngx_http_zip_module.so

# this is just used in the webservers group vars
nginx_conf_client_max_body_size: 20g

nginx_servers:
  - certbot_redirects

nginx_ssl_servers:
  - usegalaxy

nginx_extra_configs:
  - usegalaxy_rewrites.conf

certbot_domains:
  - usegalaxy.org
  - "*.usegalaxy.org"
  - "{{ inventory_hostname_short }}.galaxyproject.org"

galaxy_base_welcome_names:
  - usegalaxy.org
  - galaxy-web-05.galaxyproject.org
  - galaxy-web-06.galaxyproject.org

galaxy_themes_subdomains:
  - name: singlecell
    theme:
      singlecell:
        masthead:
          color: "#530080"
  - name: brc
    theme:
      brc:
        masthead:
          color: >
            linear-gradient( 0deg,
              rgba(34,193,195,1) 0%,
              rgba(253,155,45,1) 100%)

# Disable handlers in role, use playbook handlers
galaxy_systemd_mode: null
# Disable gravity config in galaxy.yml, use standalone Gravity config
galaxy_gravity_config_default: null
gravity_config_file: "/etc/galaxy/gravity.d/galaxy_{{ galaxy_instance_codename }}.yml"
gravity_virtualenv_command: /opt/rh/rh-python38/root/usr/bin/python3 -m venv
gravity_venv_dir: "{{ galaxy_root }}/gravity"
gravity_package: "gravity==1.0.6"
galaxy_gravity_command: "{{ gravity_venv_dir }}/bin/galaxyctl"

gravity_config:
  instance_name: "{{ galaxy_instance_codename }}"
  process_manager: systemd
  galaxy_user: "{{ galaxy_user }}"
  galaxy_group: "{{ galaxy_group }}"
  galaxy_root: "{{ galaxy_server_dir }}"
  galaxy_config_file: "{{ galaxy_config_file }}"
  log_dir: "{{ galaxy_log_dir }}"
  virtualenv: "{{ galaxy_venv_dir }}"
  memory_limit: 5
  gunicorn:
    - bind: localhost:8080
      workers: 3
      timeout: 600
      restart_timeout: 600
      preload: true
      extra_args: --max-requests 50000 --max-requests-jitter 10000 --worker-tmp-dir /dev/shm
      environment:
        # TODO: this can be removed once the base OS version of pango is >= 1.44.0
        LD_LIBRARY_PATH: "/cvmfs/{{ galaxy_cvmfs_repo }}/deps/_conda/envs/_galaxy_weasyprint_deps_/lib"
    - bind: localhost:8081
      workers: 3
      timeout: 600
      restart_timeout: 600
      preload: true
      extra_args: --max-requests 50000 --max-requests-jitter 10000 --worker-tmp-dir /dev/shm
      environment:
        LD_LIBRARY_PATH: "/cvmfs/{{ galaxy_cvmfs_repo }}/deps/_conda/envs/_galaxy_weasyprint_deps_/lib"
  celery:
    enable: false
    enable_beat: false
    environment:
      LD_LIBRARY_PATH: "/cvmfs/{{ galaxy_cvmfs_repo }}/deps/_conda/envs/_galaxy_weasyprint_deps_/lib"
  tusd:
    enable: true
    tusd_path: /usr/local/sbin/tusd
    upload_dir: "{{ galaxy_tus_upload_store }}"
    memory_limit: 2

# used by nginx template
galaxy_tusd_port: 1080

tusd_version: v1.10.0
