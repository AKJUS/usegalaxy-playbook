---

# TODO: merge this w/ Test (it is almost identical)

# these vars are consumed in both the job_conf.yml and job_router_conf.yml templates

# this is used in the "tools" section of the job_conf - make sure any you define here don't appear in lists below
galaxy_job_conf_tools:
  #- id: random_lines1
  #  environment: tacc_k8s
  #  handler: k8s
  - id: interactive_tool_jupyter_notebook
    environment: tacc_k8s
    handler: k8s
  - id: interactive_tool_rstudio
    environment: tacc_k8s
    handler: k8s
  - id: interactive_tool_panoply
    environment: tacc_k8s
    handler: k8s
  - id: interactive_tool_phinch
    environment: tacc_k8s
    handler: k8s
  - id: interactive_tool_pavian
    environment: tacc_k8s
    handler: k8s
  # runs through the job router with special spec but this gets it the resource selector
  #- id: busco
  #  handler: multi
  #  resources: frontera
  # standard multi handlers and resources but excluded from templating into job_router_conf because it has a specific
  # mapping
  - id: maker
    handler: multi
    resources: multi
  #- id: unicycler
  #  environment: slurm_multi_memory_resubmit
  #  handler: multi

  # TPV
  - id: random_lines1
    environment: tpv_dispatcher
  - id: fastqc
    environment: tpv_dispatcher
  - id: fastq_trimmer
    environment: tpv_dispatcher
  - id: fastq_quality_trimmer
    environment: tpv_dispatcher
  - id: fastq_combiner
    environment: tpv_dispatcher
  - id: fastq_filter
    environment: tpv_dispatcher
  - id: fastq_groomer
    environment: tpv_dispatcher
  - id: fastq_manipulation
    environment: tpv_dispatcher
  - id: fastq_masker_by_quality
    environment: tpv_dispatcher
  - id: fastq_paired_end_splitter
    environment: tpv_dispatcher
  - id: fastq_paired_end_joiner
    environment: tpv_dispatcher
  - id: fastq_stats
    environment: tpv_dispatcher
  - id: flye
    environment: tpv_dispatcher
  - id: trinity
    environment: tpv_dispatcher
  - id: busco
    environment: tpv_dispatcher
  - id: bionano_scaffold
    environment: tpv_dispatcher
  - id: kraken
    environment: tpv_dispatcher
  - id: kraken2
    environment: tpv_dispatcher
  - id: abyss-pe
    environment: tpv_dispatcher
  - id: spades
    environment: tpv_dispatcher
  - id: unicycler
    environment: tpv_dispatcher
  - id: ncbi_blastn_wrapper
    environment: tpv_dispatcher
  - id: ncbi_blastp_wrapper
    environment: tpv_dispatcher
  - id: ncbi_blastx_wrapper
    environment: tpv_dispatcher
  - id: ncbi_rpsblast_wrapper
    environment: tpv_dispatcher
  - id: ncbi_tblastn_wrapper
    environment: tpv_dispatcher
  - id: ncbi_tblastx_wrapper
    environment: tpv_dispatcher
  - id: gmx_sim
    environment: tpv_dispatcher
  - id: alphafold
    environment: tpv_dispatcher
  - id: bwa_mem2
    environment: tpv_dispatcher
  - id: bandage_image
    environment: tpv_dispatcher
  - id: bandage_info
    environment: tpv_dispatcher
  - id: meryl
    environment: tpv_dispatcher
  - id: hifiasm
    environment: tpv_dispatcher

# tools that use $GALAXY_SLOTS
#galaxy_multicore_tools: "{{ __galaxy_multicore_tools + __galaxy_multicore_tools_include }}"
galaxy_multicore_tools: "{{ (__galaxy_multicore_tools + __galaxy_multicore_tools_include) | difference(__galaxy_multicore_tools_exclude) | difference(galaxy_large_memory_tools) | difference(galaxy_low_priority_tools) | difference(galaxy_frontera_tools) }}"

# tools that e.g. use globs and should be excluded from running via pulsar until that is addressed
# generated with:
#     tools_dir='/cvmfs/main.galaxyproject.org/shed_tools'
#     find "$tools_dir" -name \*.xml -print0 | xargs -0 grep -l 'work_dir.*\*' | xargs grep '<tool' | grep -o 'id="[^"]*"' | awk -F'"' '{print $2}' | sort | uniq
#
# ideally we'd use full tool versions but this is good enough for now
galaxy_pulsar_incompatible_tools:
  - annotatemyids
  - bacteria_tradis
  - bandage_image
  - egsea
  - iqtree
  - limma_voom
  - macs2_callpeak
  - mothur_biom_info
  - mothur_chimera_ccode
  - mothur_chimera_pintail
  - mothur_chimera_uchime
  - mothur_chimera_vsearch
  - mothur_chop_seqs
  - mothur_classify_rf
  - mothur_classify_seqs
  - mothur_classify_tree
  - mothur_cluster
  - mothur_cluster_classic
  - mothur_cluster_fragments
  - mothur_cluster_split
  - mothur_consensus_seqs
  - mothur_cooccurrence
  - mothur_corr_axes
  - mothur_count_groups
  - mothur_count_seqs
  - mothur_create_database
  - mothur_degap_seqs
  - mothur_deunique_seqs
  - mothur_deunique_tree
  - mothur_dist_seqs
  - mothur_fastq_info
  - mothur_filter_seqs
  - mothur_get_communitytype
  - mothur_get_dists
  - mothur_get_groups
  - mothur_get_lineage
  - mothur_get_mimarkspackage
  - mothur_get_otulabels
  - mothur_get_otus
  - mothur_get_rabund
  - mothur_get_relabund
  - mothur_get_sabund
  - mothur_get_seqs
  - mothur_hcluster
  - mothur_heatmap_sim
  - mothur_homova
  - mothur_indicator
  - mothur_lefse
  - mothur_libshuff
  - mothur_list_seqs
  - mothur_make_contigs
  - mothur_make_fastq
  - mothur_make_group
  - mothur_make_lefse
  - mothur_make_lookup
  - mothur_make_shared
  - mothur_make_sra
  - mothur_mantel
  - mothur_merge_groups
  - mothur_mimarks_attributes
  - mothur_nmds
  - mothur_otu_hierarchy
  - mothur_pairwise_seqs
  - mothur_parsimony
  - mothur_pcoa
  - mothur_pcr_seqs
  - mothur_phylo_diversity
  - mothur_phylotype
  - mothur_pre_cluster
  - mothur_primer_design
  - mothur_remove_dists
  - mothur_remove_groups
  - mothur_remove_lineage
  - mothur_remove_otulabels
  - mothur_remove_otus
  - mothur_remove_rare
  - mothur_reverse_seqs
  - mothur_screen_seqs
  - mothur_sens_spec
  - mothur_seq_error
  - mothur_sffinfo
  - mothur_shhh_flows
  - mothur_shhh_seqs
  - mothur_sort_seqs
  - mothur_split_abund
  - mothur_sub_sample
  - mothur_summary_qual
  - mothur_summary_seqs
  - mothur_summary_shared
  - mothur_summary_single
  - mothur_summary_tax
  - mothur_tree_shared
  - mothur_trim_seqs
  - mothur_unifrac_unweighted
  - mothur_unifrac_weighted
  - mothur_unique_seqs
  - pathview
  - qualimap_bamqc
  - scanpy_plot
  - snpfreqplot
  - tradis_gene_insert_sites
  - velvetoptimiser

# tools that should run on Bridges
galaxy_large_memory_tools:
  - trinity_psc

# tools that can run on both multi and Bridges
galaxy_conditional_large_memory_tools: []

# tools that should run on Stampede
galaxy_low_priority_tools: []

# tools that should run on Frontera
galaxy_frontera_tools: []

# some tools have explicit mappings (e.g. for Bridges)
__galaxy_multicore_tools_exclude:
  - align_families
  - busco
  #- fasterq_dump
  - gmx_sim
  - maker
  - rna_star
  - rna_starsolo
  #- star_fusion
  # temp js2
  - meryl

# missed by the method below because $GALAXY_SLOTS is in a macro file
__galaxy_multicore_tools_include:
  - deeptools_bam_compare
  - deeptools_bam_coverage
  - deeptools_bam_pe_fragmentsize
  - deeptools_bigwig_compare
  - deeptools_compute_gc_bias
  - deeptools_compute_matrix
  - deeptools_correct_gc_bias
  - deeptools_multi_bam_summary
  - deeptools_multi_bigwig_summary
  - deeptools_plot_coverage
  - deeptools_plot_enrichment
  - deeptools_plot_fingerprint
  - hyphy_absrel
  - hyphy_fel
  - hyphy_gard
  - hyphy_meme
  - keras_train_and_eval
  - megablast_wrapper
  - mimodd_align
  - mimodd_varcall
  - model_prediction
  - sklearn_searchcv
  - stacking_ensemble_models
  - umi_tools_dedup
  # manual adds because I'm not running the thing below again
  - deepvariant

# generated with:
#     grep -rlI GALAXY_SLOTS /cvmfs/main.galaxyproject.org/{shed,migrated}_tools/toolshed.g2.bx.psu.edu/repos \
#       | xargs grep '<tool.*id=' | sed -Ee 's/^.*id="([^"]+).*$/\1/' | sort | uniq
#
# don't modify things here, this list is meant to be automatically regenerated. instead, list tools to exclude/include
# in the lists above.
#
__galaxy_multicore_tools:
  - alevin
  - align_families
  - alleyoop
  - antismash
  - bedtools_bamtobed
  - bellerophon
  - bg_diamond
  - bg_diamond_makedb
  - bg_diamond_view
  - bioext_bealign
  - bio_hansel
  - bowtie2
  - bowtie_wrapper
  - busco
  - bwa
  - bwa_mem
  - bwa_mem2
  - bwameth
  - bwa_wrapper
  - correct_barcodes
  - ctb_chemfp_butina_clustering
  - ctb_pubchem_download_assays
  - ctb_pubchem_download_as_smiles
  - cuffdiff
  - cufflinks
  - cuffmerge
  - cuffnorm
  - cuffquant
  - cutadapt
  - dada2_assignTaxonomyAddspecies
  - dada2_dada
  - dada2_learnErrors
  - deseq2
  - dexseq
  - disco
  - docking
  - dunovo
  - egsea
  - exonerate
  - fargene
  - fasterq_dump
  - fastp
  # not sure how much this actually improves runtime but considering it doesn't use memory and it runs in the order of a
  # couple minutes, this is a huge waste
  #- fastqc
  - featurecounts
  - flash
  - freebayes
  - gatk4_mutect2
  - gatk_count_covariates
  - gatk_realigner_target_creator
  - gatk_unified_genotyper
  - gatk_variant_eval
  - gatk_variant_recalibrator
  - gatk_variant_select
  - gmx_em
  - gmx_sim
  - gubbins
  - heinz
  - hhsearch
  - hifive
  - hisat2
  - hyphy_relax
  - iqtree
  - iuc_pear
  - ivar_trim
  - jasminesv
  - kallisto_pseudo
  - kallisto_quant
  - kc-align
  - kobas_annotate
  - lastz_wrapper_2
  - lofreq_call
  - lofreq_viterbi
  - maker
  - maxbin2
  - maxquant
  - medaka_consensus
  - medaka_consensus_pipeline
  - medaka_variant_pipeline
  - megahit
  - meme_meme
  - meryl
  - metaspades
  - migmap
  - minimap2
  - mlst
  - mothur_align_seqs
  - mothur_chimera_bellerophon
  - mothur_chimera_ccode
  - mothur_chimera_check
  - mothur_chimera_perseus
  - mothur_chimera_pintail
  - mothur_chimera_slayer
  - mothur_chimera_uchime
  - mothur_chimera_vsearch
  - mothur_chop_seqs
  - mothur_classify_seqs
  - mothur_cluster_split
  - mothur_dist_seqs
  - mothur_dist_shared
  - mothur_filter_seqs
  - mothur_get_communitytype
  - mothur_indicator
  - mothur_make_contigs
  - mothur_metastats
  - mothur_pairwise_seqs
  - mothur_parsimony
  - mothur_pcr_seqs
  - mothur_phylo_diversity
  - mothur_pre_cluster
  - mothur_primer_design
  - mothur_rarefaction_single
  - mothur_screen_seqs
  - mothur_seq_error
  - mothur_shhh_flows
  - mothur_shhh_seqs
  - mothur_summary_seqs
  - mothur_summary_shared
  - mothur_tree_shared
  - mothur_trim_flows
  - mothur_trim_seqs
  - mothur_unifrac_unweighted
  - mothur_unifrac_weighted
  - multigps
  - mummer_mummer
  - mummer_nucmer
  - mz_to_sqlite
  - nanoplot
  - nonpareil
  - openbabel_multi_obgrep
  - openbabel_obgrep
  - openbabel_subsearch
  - OpenPepXL
  - orfipy
  - pangolin
  - peptide_shaker
  - pileometh
  - pilon
  - pipelign
  - plant_tribes_assembly_post_processor
  - plant_tribes_gene_family_aligner
  - plant_tribes_gene_family_classifier
  - plant_tribes_gene_family_phylogeny_builder
  - plant_tribes_kaks_analysis
  - presto_alignsets
  - presto_assemblepairs
  - presto_buildconsensus
  - presto_filterseq
  - presto_maskprimers
  - prokka
  - qualimap_bamqc
  - quast
  - racon
  - rapidnj
  - rbc_mafft
  - repeatmasker_wrapper
  - rnaspades
  - rna_star
  - rna_starsolo
  - roary
  - sailfish
  - salmon
  - sam_to_bam
  - samtools_slice_bam
  - samtools_sort
  - scanpy_remove_confounders
  - scpipe
  - search_gui
  - seqtk_mergefa
  - seqtk_mergepe
  - shovill
  - sina
  - sklearn_build_pipeline
  - sklearn_ensemble
  - sklearn_lightgbm
  - sklearn_model_validation
  - sklearn_numeric_clustering
  - slamdunk
  - smina
  - sniffles
  - snippy
  - socru
  - spaln
  - staramr_search
  - star_fusion
  - stringtie
  - stringtie_merge
  - tag_pileup_frequency
  - tb_profiler_profile
  - td
  - tetyper
  - tophat
  - tophat2
  - tophat_fusion_post
  - transdecoder
  - trim_galore
  - trimmomatic
  - trinity_align_and_estimate_abundance
  - trinity_psc
  - valet
  - varscan_somatic
  - velveth
  - velvetoptimiser

# legacy tools that expect `python` to be Python 2
#
# generated with https://gist.github.com/mvdbeek/590213f65520c498321e1850ed8d44e6

galaxy_python2_legacy_tools:
  - "toolshed.g2.bx.psu.edu/repos/boris/phylorelatives/phylorelatives/0.0.1"
  - "toolshed.g2.bx.psu.edu/repos/devteam/microsats_alignment_level/microsats_align1/1.0.0"
  - "toolshed.g2.bx.psu.edu/repos/devteam/microsats_mutability/microsats_mutability1/1.1.0"
  #- "toolshed.g2.bx.psu.edu/repos/devteam/rcve/rcve1/1.0.0"
  #- "toolshed.g2.bx.psu.edu/repos/devteam/kernel_canonical_correlation_analysis/kcca1/1.0.0"
  #- "toolshed.g2.bx.psu.edu/repos/devteam/kernel_principal_component_analysis/kpca1/1.0.0"
  - "toolshed.g2.bx.psu.edu/repos/devteam/logistic_regression_vif/LogisticRegression/1.0.1"
  - "toolshed.g2.bx.psu.edu/repos/guru-ananda/heatmap/heatmap_1/1.0.0"
  - "toolshed.g2.bx.psu.edu/repos/devteam/quality_filter/qualityFilter/1.0.1"
  # FIXME ABOVE
  #- "toolshed.g2.bx.psu.edu/repos/iuc/ngsutils_bam_filter/ngsutils_bam_filter/0.5.7.1"
  #- "toolshed.g2.bx.psu.edu/repos/iuc/repmatch_gff3/repmatch_gff3/1.0.0"
  - "toolshed.g2.bx.psu.edu/repos/iuc/vegan_diversity/vegan_diversity/0.0.2"
  - "toolshed.g2.bx.psu.edu/repos/iuc/vegan_diversity/vegan_diversity/0.0.3"
  - "toolshed.g2.bx.psu.edu/repos/iuc/vegan_fisher_alpha/vegan_fisher_alpha/0.0.2"
  - "toolshed.g2.bx.psu.edu/repos/iuc/vegan_fisher_alpha/vegan_fisher_alpha/0.0.3"
  - "toolshed.g2.bx.psu.edu/repos/iuc/vegan_rarefaction/vegan_rarefaction/0.0.2"
  - "toolshed.g2.bx.psu.edu/repos/iuc/vegan_rarefaction/vegan_rarefaction/0.0.3"
  - "toolshed.g2.bx.psu.edu/repos/iuc/vsearch/vsearch_alignment/1.1.3.1"
  - "toolshed.g2.bx.psu.edu/repos/iuc/vsearch/vsearch_alignment/1.9.7.0"
  - "toolshed.g2.bx.psu.edu/repos/iuc/vsearch/vsearch_chimera_detection/1.1.3.1"
  - "toolshed.g2.bx.psu.edu/repos/iuc/vsearch/vsearch_chimera_detection/1.9.7.0"
  - "toolshed.g2.bx.psu.edu/repos/iuc/vsearch/vsearch_clustering/1.1.3.2"
  - "toolshed.g2.bx.psu.edu/repos/iuc/vsearch/vsearch_clustering/1.9.7.0"
  - "toolshed.g2.bx.psu.edu/repos/iuc/vsearch/vsearch_dereplication/1.1.3.2"
  - "toolshed.g2.bx.psu.edu/repos/iuc/vsearch/vsearch_dereplication/1.9.7.0"
  - "toolshed.g2.bx.psu.edu/repos/iuc/vsearch/vsearch_masking/1.1.3.1"
  - "toolshed.g2.bx.psu.edu/repos/iuc/vsearch/vsearch_masking/1.9.7.0"
  - "toolshed.g2.bx.psu.edu/repos/iuc/vsearch/vsearch_search/1.1.3.1"
  - "toolshed.g2.bx.psu.edu/repos/iuc/vsearch/vsearch_search/1.9.7.0"
  - "toolshed.g2.bx.psu.edu/repos/iuc/vsearch/vsearch_shuffling/1.1.3.1"
  - "toolshed.g2.bx.psu.edu/repos/iuc/vsearch/vsearch_shuffling/1.9.7.0"
  - "toolshed.g2.bx.psu.edu/repos/iuc/vsearch/vsearch_sorting/1.1.3.2"
  - "toolshed.g2.bx.psu.edu/repos/iuc/vsearch/vsearch_sorting/1.9.7.0"
  - "toolshed.g2.bx.psu.edu/repos/lparsons/htseq_count/htseq_count/0.6.1galaxy1"
  - "toolshed.g2.bx.psu.edu/repos/miller-lab/genome_diversity/gd_add_fst_column/1.2.0"
  - "toolshed.g2.bx.psu.edu/repos/miller-lab/genome_diversity/gd_average_fst/1.3.0"
  - "toolshed.g2.bx.psu.edu/repos/miller-lab/genome_diversity/gd_calc_freq/1.2.0"
  - "toolshed.g2.bx.psu.edu/repos/miller-lab/genome_diversity/gd_cluster_kegg/1.0.0"
  - "toolshed.g2.bx.psu.edu/repos/miller-lab/genome_diversity/gd_coverage_distributions/1.0.0"
  - "toolshed.g2.bx.psu.edu/repos/miller-lab/genome_diversity/gd_discover_familial_relationships/1.0.0"
  - "toolshed.g2.bx.psu.edu/repos/miller-lab/genome_diversity/gd_diversity_pi/1.1.0"
  - "toolshed.g2.bx.psu.edu/repos/miller-lab/genome_diversity/gd_dpmix/1.2.0"
  - "toolshed.g2.bx.psu.edu/repos/miller-lab/genome_diversity/gd_draw_variants/1.1.0"
  - "toolshed.g2.bx.psu.edu/repos/miller-lab/genome_diversity/gd_filter_gd_snp/1.2.0"
  - "toolshed.g2.bx.psu.edu/repos/miller-lab/genome_diversity/gd_find_intervals/1.1.0"
  - "toolshed.g2.bx.psu.edu/repos/miller-lab/genome_diversity/gd_inbreeding_and_kinship/1.0.0"
  - "toolshed.g2.bx.psu.edu/repos/miller-lab/genome_diversity/gd_nucleotide_diversity_pi/1.0.0"
  - "toolshed.g2.bx.psu.edu/repos/miller-lab/genome_diversity/gd_offspring_heterozygosity/1.0.0"
  - "toolshed.g2.bx.psu.edu/repos/miller-lab/genome_diversity/gd_offspring_heterozygosity_pedigree/1.0.0"
  - "toolshed.g2.bx.psu.edu/repos/miller-lab/genome_diversity/gd_pathway_image/1.1.0"
  - "toolshed.g2.bx.psu.edu/repos/miller-lab/genome_diversity/gd_pca/1.0.0"
  - "toolshed.g2.bx.psu.edu/repos/miller-lab/genome_diversity/gd_phylogenetic_tree/1.1.0"
  - "toolshed.g2.bx.psu.edu/repos/miller-lab/genome_diversity/gd_prepare_population_structure/1.2.0"
  - "toolshed.g2.bx.psu.edu/repos/miller-lab/genome_diversity/gd_rank_terms/1.1.0"
  - "toolshed.g2.bx.psu.edu/repos/miller-lab/genome_diversity/gd_raxml/1.0.0"
  - "toolshed.g2.bx.psu.edu/repos/miller-lab/genome_diversity/gd_sum_gd_snp/1.1.0"
  - "toolshed.g2.bx.psu.edu/repos/nick/duplex/align_families/0.3"
  - "toolshed.g2.bx.psu.edu/repos/nick/duplex/align_families/0.5"
  - "toolshed.g2.bx.psu.edu/repos/nick/duplex/duplex/0.3"
  - "toolshed.g2.bx.psu.edu/repos/nick/duplex/duplex/0.5"
  - "toolshed.g2.bx.psu.edu/repos/nick/duplex/make_families/0.3"
  - "toolshed.g2.bx.psu.edu/repos/nick/duplex/make_families/0.5"
  - "toolshed.g2.bx.psu.edu/repos/peterjc/venn_list/venn_list/0.0.9"
  - "toolshed.g2.bx.psu.edu/repos/rnateam/mafft/rbc_mafft/7.221.1"
  - "toolshed.g2.bx.psu.edu/repos/rnateam/mafft/rbc_mafft/7.221.3"
  - "toolshed.g2.bx.psu.edu/repos/tyty/structurefold/get_read_pipeline/1.0"
  - "toolshed.g2.bx.psu.edu/repos/tyty/structurefold/iterative_map_pipeline/1.0"
  - "toolshed.g2.bx.psu.edu/repos/tyty/structurefold/predict_pipeline/1.0"
  - "toolshed.g2.bx.psu.edu/repos/tyty/structurefold/react_cal_pipeline/1.0"
