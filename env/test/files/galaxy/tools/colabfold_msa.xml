<tool id="colabfold_msa" name="colabfold_msa" version="@VERSION@+galaxy@VERSION_SUFFIX@" profile="21.05">
    <description>This tool runs the alphafold step of the collabfold tool in Galaxy</description>
    <macros>
        <token name="@VERSION@">1.5.3</token>
        <token name="@CUDA_VERSION@">12.2.2</token>
        <token name="@VERSION_SUFFIX@">1</token>
        <xml name="db_selector">
            <conditional name="select_db">
                <param name="use_db" type="select" label="Manually set database?">
                    <option value="yes">Yes</option>
                    <option value="no">No</option>
                </param>
                <when value="no"></when>
                <when value="yes">
                    <param name="msa_mode" label="MSA mode" type="select">
                        <option value="mmseqs2_uniref_env">mmseqs2_uniref_env</option>
                        <option value="mmseqs2_uniref">mmseqs2_uniref</option>
                        <option value="single_sequence">Use single sequence input</option>
                        <!-- <option value="custom">custom</option> -->
                    </param>
                </when>
            </conditional>
        </xml>
    </macros>
    <requirements>
        <container type="docker"> ghcr.io/sokrypton/colabfold:@VERSION@-cuda@CUDA_VERSION@</container>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[ 
    #import re
    #if $custom_template:
        mkdir template_dir &&
        #for $file in $custom_template:
            ln -s $file template_dir/${file.element_identifier}.pdb &&
        #end for
    #end if   

    #if $query_type.select_query_type == "fasta":
        #set input_file = re.sub('[^\s\w\-]', '_', str($query_type.input.element_identifier)) + '.fasta'
        ln -s $query_type.input $input_file &&
    #end if

    mkdir output &&
    colabfold_batch --msa-only
    #if $query_type.select_query_type == "fasta" or $query_type.select_query_type == "paste":
        #if $query_type.select_db.use_db == "yes":
            --msa-mode $query_type.select_db.msa_mode
        #end if
    #end if
    --pair-mode $pair_mode
    ## --pair-strategy $pairing_strategy
    $templates
    #if $custom_template:
        --custom-template-path template_dir
    #end if
    #if $query_type.select_query_type == "fasta":
        $input_file
    #else:
        $query_type.input
    #end if
    output &&
    tar -cf output.tar output
    ]]></command>
    <inputs>
        <conditional name="query_type">
            <param name="select_query_type" label="Data input method" type="select">
                <option value="fasta">FASTA file</option>
                <option value="paste">Paste sequence into textbox</option>
                <option value="a3m">a3m file</option>
            </param>
            <when value="fasta">
                <param name="input" type="data" format="fasta" label="Query sequence fasta"/>
                <expand macro="db_selector"/>
            </when>
            <when value="paste">
                <param name="input" type="text" label="Query sequence"/>
                <expand macro="db_selector"/>
            </when>
            <when value="a3m">
                <param name="input" type="data" format="a3m" label="Query sequence"/>
            </when>
        </conditional>
        <param name="pair_mode" label="Pair mode" type="select">
            <option value="unpaired_paired">Attempt to pair sequences from the same operon within the genome</option>
            <option value="paired">Only used sequences that were successfully paired</option>
            <option value="unpaired">Generated seperate MSA for each protein</option>
        </param> 
        <!-- Non functional in current release of colabfold, planned to expose in next one -->
        <!-- <param name="pairing_strategy" label="Pairing strategy" type="select">
            <option value="greedy">Greedy: MSA sequences should only be paired if the same species exist in at least two MSAs </option>
            <option value="complete">Complete: MSA sequences should only be paired if the same species exist in all MSAs</option>
        </param> -->
        <param argument="--templates" label="Query PDB templates from the MSA server" type="boolean" truevalue="--templates" falsevalue=""/>
        <param name="custom_template" label="List of pdb files to provide the prediciton as custom templates" type="data" format="pdb" multiple="true" optional="true"/>
    </inputs>
    <outputs>
        <data name="output" format="tar" from_work_dir="output.tar" label="${tool.name} on ${on_string}: tar file"/>
    </outputs>
    <tests>
        <test expect_num_outputs="1">
            <param name="input" value="input.fasta"/>
        </test>
    </tests>
    <help><![CDATA[
        Generate MSAs for the alphafold step of Colabfold
    ]]></help>
    <citations>
        <citation type="doi">10.1038/s41592-022-01488-1</citation>
    </citations>
</tool>