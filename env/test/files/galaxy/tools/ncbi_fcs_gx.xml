<tool id="ncbi_fcs_gx" name="NCBI FCS GX" profile="21.05" version="0.4.1+galaxy0">
    <description>detects contamination from foreign organisms in genome sequences</description>
    <edam_operations>
        <edam_operation>operation_3187</edam_operation>
    </edam_operations>
    <requirements>
        <requirement type="package" version="0.4.1">ncbi-fcs-gx</requirement>
    </requirements>
    <command detect_errors="exit_code">
GX_NUM_CORES=\${GALAXY_SLOTS:-2}
#if $mode.mode_selector == "screen"
    ## copy data to local storage
    #import os
    #set manifest_pathname = $mode.config_tag.fields.manifest
    #set tool_database_dir = os.path.join($mode.config_tag.fields.path, $mode.config_tag.fields.value)
    #if $in_test_mode == "yes"
        #set manifest_pathname = $mode.screen_adv.database_path.fields.manifest
        #set tool_database_dir = os.path.join($mode.screen_adv.database_path.fields.name, $mode.screen_adv.database_path.fields.value)
    #end if
    mkdir -p '$tool_database_dir' &amp;&amp;
    sync_files.py get --mft '$manifest_pathname' --dir '$tool_database_dir' &gt; /dev/null 2&gt;&amp;1 &amp;&amp;
    ## run gx
    run_gx.py
        --fasta '$mode.fasta'
    #if $mode.id.id_selector == "gx_div"
        --tax-id '1'
        --div '$mode.id.div'
    #else
        --tax-id '$mode.id.tax_id'
    #end if
        --species '$mode.species'
        --split-fasta '$mode.screen_adv.split_fasta'
    #if $mode.screen_adv.div:
        --div '$mode.screen_adv.div'
    #end if
        --gx-db '$tool_database_dir'
        --out-basename output
        --action-report true
        --generate-logfile false
#elif $mode.mode_selector == "clean"
    ## run gx
    gx clean-genome
        --input '$mode.input'
        --action-report '$mode.action_report'
        --contam-fasta-out 'contam.fa'
        --min-seq-len '$mode.min_seq_len'
        --output 'clean.fa'
#end if
    </command>
    <environment_variables>
        <environment_variable name="GX_ALIGN_EXCLUDE_TAXA">$getVar('mode.screen_adv.gx_align_exclude_taxa', '')</environment_variable>
    </environment_variables>
    <inputs>
        <conditional name="mode">
            <param label="Choose the mode" name="mode_selector" type="select">
                <option selected="true" value="screen">Screen genome</option>
                <option value="clean">Clean genome</option>
                </param>
            <when value="screen">
                <param label="Database" name="config_tag" type="select">
                    <options from_data_table="ncbi_fcs_gx_config">
                        <filter column="2" type="static_value" value="1" />
                        <filter column="2" name="sorted_description" type="sort_by" />
                        </options>
                    <validator message="No database is available" type="no_options" />
                    </param>
                <param argument="--fasta" format="fasta" help="To detect contamination from foreign organisms, a genome assembly in a fasta file." label="Input file (Fasta file)" type="data" />
                <conditional name="id">
                    <param label="Taxonomy entry" name="id_selector" type="select">
                        <option selected="true" value="gx_div">GX Division</option>
                        <option value="ncbi_tax">NCBI Taxonomic identifier</option>
                        </param>
                    <when value="gx_div">
                        <param argument="--div" type="select">
                            <options from_data_table="ncbi_fcs_gx_divisions">
                                <filter column="1" type="sort_by" />
                                </options>
                            <validator message="No database is available" type="no_options" />
                            </param>
                        </when>
                    <when value="ncbi_tax">
                        <param argument="--tax-id" help="The appropriate tax-id for your genome assembly.  The appropriate tax-id for an organism can be retrieved from the NCBI Taxonomy website." label="Taxonomic identifier" type="text" />
                        </when>
                    </conditional>
                <param argument="--species" label="Species binomial name" optional="true" type="text" />
                <section name="screen_adv" title="Advanced options">
                    <param help="Multiple tax-ids may be provided as a comma-separated list." label="Taxonomic identifier(s) to exclude" name="gx_align_exclude_taxa" optional="true" type="text" value="">
                        <validator message="comma separated integers" type="regex">^\s*\d+\s*(,\s*\d+\s*)*$</validator>
                        <sanitizer invalid_char="">
                            <valid initial="string.digits">
                                <add value="," />
                                </valid>
                            </sanitizer>
                        </param>
                    <param argument="--split-fasta" checked="true" label="Split fasta sequences on N-runs of length at least 10" optional="true" type="boolean" />
                    <param argument="--div" help="from 'NCBI BLAST name' on taxon Info page" label="BLAST-div of the tax-id" optional="true" type="text" value="" />
                    <param label="Database Path" name="database_path" type="select">
                        <options from_data_table="ncbi_fcs_gx_databases">
                            <filter column="0" ref="config_tag" ref_attribute="fields.name" type="param_value" />
                            </options>
                        <validator message="No database is available" type="no_options" />
                        </param>
                    </section>
                </when>
            <when value="clean">
                <param argument="--input" format="fasta" help="To detect contamination from foreign organisms, a genome assembly in a fasta file." label="Input file (Fasta file)" type="data" />
                <param argument="--action-report" format="tabular" label="Select Action report" type="data" />
                <param argument="--min-seq-len" label="Minimumm sequence length to keep" type="integer" value="200" />
                </when>
            </conditional>
        <param name="in_test_mode" type="hidden" value="no" />
        </inputs>
    <outputs>
        <data format="tabular" from_work_dir="output.taxonomy.rpt" label="${tool.name} on ${on_string}: Taxonomy report" name="taxonomy_report">
            <filter>mode['mode_selector'] == 'screen'</filter>
            </data>
        <data format="tabular" from_work_dir="output.fcs_gx_report.txt" label="${tool.name} on ${on_string}: Action report" name="action_report">
            <filter>mode['mode_selector'] == 'screen'</filter>
            </data>
        <data format="fasta" from_work_dir="contam.fa" label="${tool.name} on ${on_string}: Fasta for EXCLUDE entries" name="contam_fasta">
            <filter>mode['mode_selector'] == 'clean'</filter>
            </data>
        <data format="fasta" from_work_dir="clean.fa" label="${tool.name} on ${on_string}: Cleaned Fasta" metadata_source="mode.input" name="clean_fasta">
            <filter>mode['mode_selector'] == 'clean'</filter>
            </data>
        </outputs>
    <tests>
        <test expect_num_outputs="2">
            <param name="in_test_mode" value="yes" />
            <param name="mode_selector" value="screen" />
            <param name="config_tag" value="test-only" />
            <param name="id_selector" value="ncbi_tax" />
            <param ftype="fasta" name="fasta" value="fcsgx_test.fa.gz" />
            <param name="tax_id" value="6973" />
            <output compare="diff" file="output.taxonomy.rpt" lines_diff="2" name="taxonomy_report" />
            <output compare="diff" file="output.fcs_gx_report.txt" lines_diff="2" name="action_report" />
            </test>
        <test expect_num_outputs="2">
            <param name="in_test_mode" value="yes" />
            <param name="mode_selector" value="screen" />
            <param name="config_tag" value="test-only" />
            <param name="id_selector" value="gx_div" />
            <param ftype="fasta" name="fasta" value="fcsgx_test.fa.gz" />
            <param name="div" value="anml:insects" />
            <output compare="diff" file="output.taxonomy.rpt" lines_diff="2" name="taxonomy_report" />
            <output compare="diff" file="output.fcs_gx_report.txt" lines_diff="2" name="action_report" />
            </test>
        <test expect_num_outputs="2">
            <param name="mode_selector" value="clean" />
            <param name="id_selector" value="ncbi_tax" />
            <param ftype="fasta" name="input" value="fcsgx_test.fa.gz" />
            <param ftype="tabular" name="action_report" value="output.fcs_gx_report.txt" />
            <output file="output.contam.fa" name="contam_fasta" />
            <output file="output.clean.fa" name="clean_fasta" />
            </test>
        </tests>
    <help>
    FCS-GX detects contamination from foreign organisms in genome sequences using the genome cross-species aligner (GX). The FCS-GX executable retrieves a Docker or Singularity container and runs a pipeline to align sequences to a large database of NCBI genomes through modified k-mer seeds and assign a most likely taxonomic division.

    FCS-GX classifies sequences as contaminant when their taxonomic assignment is different from the user provided taxonomic identifier. A contamination summary provides an overview of observed contaminant divisions, counts, and total sizes, and an action report provides details and recommended actions for each problematic sequence.

    https://github.com/ncbi/fcs/wiki/FCS-GX
    </help>
    <citations>
        <citation type="doi">10.1101/2023.06.02.543519</citation>
    </citations>
</tool>
