---

# by default, tools are assigned 1 core, 8 GB of memory, and a 36 hour walltime
tools:
  kraken:
    # can be a list if you want to do different things with different params (or one thing with no checked params)
    - params:
        - name: kraken_database
          value: bacteria
      # can be a real id or key in 'destinations' dict below
      destination: stampede_skx_normal
      reserved: false
  trinity:
    - params:
        - name: pool.inputs.paired_or_single
          value: paired_collection
        # comparison is implicitly on size of pair member 0
        - name: pool.inputs.pair_input
          op: '<'
          value: 10G
      destination: bridges_normal
      spec:
        # 5 * 48GB
        mem: 240G
        time: 72
    - params:
        - name: pool.inputs.paired_or_single
          value: paired_collection
        - name: pool.inputs.pair_input
          op: '<'
          value: 100G
      destination: bridges_normal
      spec:
        # 10 * 48GB
        mem: 480G
        time: 96
    - params:
        - name: pool.inputs.paired_or_single
          value: paired_collection
      destination: bridges_normal
      spec:
        # 15 * 48GB
        mem: 720G
        time: 96
    # TODO: separate vals if normalizing/not, plus param matches for non-pair
    - params:
        - name: pool.inputs.paired_or_single
          value: paired
        # comparison is implicitly on size of pair member 0
        #- name: pool.inputs.pair_input
        #  op: '<'
        #  value: 10G
      destination: bridges_normal
      spec:
        # 5 * 48GB
        mem: 240G
        time: 72
  gemini_load:
    destination: multi
  foo:
    destination: normal_16gb


# can contain spec like tool mapping, tool mapping keys override
#destinations:
  #normal:
  #  id: slurm_normal
  #  #priority_id: reserved_normal
  #normal_16gb:
  #  id: slurm_normal_16gb
  #  #priority_id: reserved_normal_16gb
  #multi:
  #  - id: slurm_multi
  #    #priority_id: reserved_multi
  #  - id: jetstream_iu_multi
  #    # no reserved? what happens now?
  #  #priority_id: reserved_multi
  #  #queued_job_threshold: 4   # do we need separate for each dest?
destinations:
  multi:
    - id: slurm_multi
    - id: jetstream_iu_multi
  jetstream_multi:
    - id: jetstream_iu_multi
  stampede_normal:
    max:
      ntasks: 272
  bridges_normal:
    override:
      mem: 720G
    normalize:
      mem: 48G
  bridges_development:
    max:
    # FIXME: test this undo max above
    #override:
      mem: 720G
    normalize:
      mem: 48G




#  jetstream_iu_multi:

groups:
  Job Priority Users:
    destination_overrides:
      slurm_normal: reserved_normal
      slurm_normal_16gb: reserved_normal_16gb
      #slurm_multi: reserved_multi
      multi: reserved_multi
  Job Resource Param Users:
    param_overrides: true

#destination_configs:
#  slurm_multi:
#    native_spec_param: native_specification
#    partition: multi
#    default_cores: 6
#    max_cores: 6
#    default_walltime: 36
#    max_walltime: 36
#    queued_job_threshold: 4
#  jetstream_multi:
#    native_spec_param: submit_native_specification
#    partition: multi
#    default_cores: 10
#    max_cores: 10
#    default_walltime: 36
#    max_walltime: 36
#    queued_job_threshold: 4


# don't overlap destinations defined in job_conf for confusion purposes
#destinations:
#  slurm_normal_16gb:
#    id: slurm_normal
#    reserved: true
#    params:
#      mem: 16384

multi_tools:
  - gemini_load
  - dada2_assignTaxonomyAddspecies
  - deeptools_bam_compare
  - deeptools_bam_coverage
  - deeptools_bam_pe_fragmentsize
  - deeptools_bigwig_compare
  - deeptools_compute_gc_bias
  - deeptools_compute_matrix
  - deeptools_correct_gc_bias
  - deeptools_multi_bam_summary
  - deeptools_multi_bigwig_summary
  - deeptools_plot_coverage
  - deeptools_plot_fingerprint
  - kraken
  - ideas
  - bwa
  - bwa_mem
  - bwa_wrapper
  - bowtie2
  - bowtie_wrapper
  - tophat
  - tophat2
  - cuffdiff
  - cufflinks
  - cuffmerge
  - cuffnorm
  - cuffquant
  - stringtie
  - hisat2
  - prokka
  - rbc_mafft
  - kc-align
  - hyphy_absrel
  - hyphy_fel
  - hyphy_gard
  - hyphy_meme
  - kraken

# these tools get 1 core and 16 GB of memory
#normal_16gb_tools: []

# these tools get 1 core and 32 GB of memory
#normal_32gb_tools: []

# these tools get 1 core and 32 GB of memory
#normal_32gb_tools: []

# these tools are fully dynamic
#dynamic_tools:
