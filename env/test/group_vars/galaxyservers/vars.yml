---

## these vars are defined in vault.yml
#
# used by: galaxyproject.galaxy (templating job_conf.xml)
galaxy_job_conf_amqp_url: "{{ vault_galaxy_job_conf_amqp_url }}"

# used by: galaxy_config var
galaxy_config_database_connection: "{{ vault_galaxy_config_database_connection }}"
galaxy_config_admin_users: "{{ vault_galaxy_config_admin_users }}"
galaxy_config_id_secret: "{{ vault_galaxy_config_id_secret }}"
galaxy_config_sentry_dsn: "{{ vault_galaxy_config_sentry_dsn }}"
galaxy_config_amqp_internal_connection: "{{ vault_galaxy_config_amqp_internal_connection }}"

## used by: lots of stuff throughout the playbook
galaxy_root: "/srv/galaxy/{{ galaxy_instance_codename }}"

## used by: proftpd template and this vars file
galaxy_ftp_upload_dir: /galaxy-repl/{{ galaxy_instance_codename }}/ftp


## used by: galaxy supervisor templates
galaxy_host_codename: test

## used by: other vars in this vars file
galaxy_log_dir: "{{ galaxy_root }}/log"


## used by: galaxyproject.galaxy and the play itself
# As of Ansible 2.0, a variable name matching a word used in a with_items loop
# (as in supervisord_group_configs) will be expanded, despite the fact that
# bare word expansion is deprecated. D=
galaxy_system_group: G-803372

# FIXME: "{{ galaxy_remote_users.privsep | default(omit) }}" is blanking remote_user on the play. I set the below option
# to workaround but this needs to be fixed in galaxyproject.galaxy, nothing should be breaking when privsep mode is not
# enabled in the role
galaxy_remote_users:
  privsep: "{{ galaxy_privileged_user }}"
  errdocs: "{{ galaxy_privileged_user }}"
  galaxy: "{{ galaxy_user }}"

# FIXME: Same thing, the become log checks if galaxy_become_users.privsep is set and yet in the defaults we cause it to
# be always set
galaxy_become_users: {}

galaxy_server_dir: /cvmfs/{{ galaxy_cvmfs_repo }}/galaxy
galaxy_shed_tools_dir: /cvmfs/{{ galaxy_cvmfs_repo }}/shed_tools
#galaxy_server_dir: /galaxy-repl/test/livedebug
galaxy_shed_tool_conf_file: /cvmfs/{{ galaxy_cvmfs_repo }}/config/shed_tool_conf.xml

#galaxy_venv_dir: defined in all.yml
galaxy_config_dir: "{{ galaxy_root }}/config"
galaxy_config_file: "{{ galaxy_config_dir }}/galaxy.yml"
galaxy_mutable_config_dir: "{{ galaxy_root }}/var"
galaxy_mutable_data_dir: "{{ galaxy_root }}/var"
# these don't need to be set if using the layout module, but usegalaxy_backup uses galaxyproject.galaxy's defaults
# without running the layout and breaks if they are unset
galaxy_cache_dir: "{{ galaxy_mutable_data_dir }}/cache"
galaxy_job_working_directory: /galaxy-repl/test/jobdir
galaxy_tool_dependency_dir: /galaxy/test/deps
galaxy_file_path: "{{ galaxy_mutable_data_dir }}/datasets"

galaxy_admin_email_to: galaxy-lab@bx.psu.edu


## used by: supervisor
galaxy_handler_count: 4
galaxy_workflow_scheduler_count: 1
galaxyservers_group_supervisor_configs:
  - galaxy
  - galaxy_handler
  - galaxy_workflow_scheduler
  - galaxy_datamanager
  #- galaxy_reports
  - galaxy_group

# supervisor template
galaxy_installer_venv_dir: "{{ galaxy_venv_dir }}"
galaxy_datamanager_venv_dir: "{{ galaxy_venv_dir }}"


usegalaxy_nagios_tools:
  - echo_test_handler0
  - echo_test_handler1
  - echo_test_cluster
  - echo_test_jetstream_iu
  - echo_test_jetstream_tacc
  - echo_test_stampede
  - echo_test_bridges


## used by usegalaxy_privileged
galaxy_dynamic_rule_dir: "{{ galaxy_root }}/dynamic_rules"
usegalaxy_dynamic_job_rules:
  - reserved.py
  - multi_dynamic_walltime.py
  - bridges_select.py
  # FIXME: ensure pyBamTools supports Python 3 and install to venv
  #- nvc_dynamic_memory.py

galaxy_pgcleanup_actions:
  - delete_userless_histories
  - delete_exported_histories
  - purge_deleted_users
  - purge_deleted_histories
  - purge_deleted_hdas
  - purge_historyless_hdas
  - purge_error_hdas
  - purge_hdas_of_purged_histories
  - delete_datasets
  - purge_datasets


## used by: usegalaxy_admin
galaxy_log_archive_dir: /galaxy-repl/{{ galaxy_instance_codename }}/backup/log


## used by: galaxyproject.tools
galaxy_instance_url: "{{ galaxy_instance_hostname }}"
tool_list_file: files/galaxy/test.galaxyproject.org/tool_list.yaml


## used by: galaxyproject.interactive_environments
interactive_environments_install_method: copy
interactive_environments_plugins_path: "{{ galaxy_root }}/interactive_environments/plugins"
interactive_environments_proxy_path: "{{ galaxy_root }}/interactive_environments/proxy"
interactive_environments_enabled:
  - jupyter
  - ethercalc
interactive_environments_config_files:
  - ie_name: jupyter
    file: jupyter.ini
    contents:
      main: {}
      docker:
        galaxy_url: "https://test.galaxyproject.org"
        docker_connect_port: "8888"
        use_volumes: "False"
        command_inject: --env DEFAULT_CONTAINER_RUNTIME=300
  - ie_name: jupyter
    file: allowed_images.yml
    contents:
      - image: "quay.io/bgruening/docker-jupyter-notebook:17.09"
        description: >
          The Jupyter notebook is the next iteration of IPython, allowing
          analysis in many different languages. This image features the Python,
          R, Julia, Haskell, Bash kernels and many scientific analysis stacks for
          each.
  - ie_name: ethercalc
    file: ethercalc.ini
    contents:
      main: {}
      docker:
        galaxy_url: "https://test.galaxyproject.org"
        docker_connect_port: "80"
        use_volumes: "False"
        command_inject: --env DEFAULT_CONTAINER_RUNTIME=300

interactive_environments_nginx_conf_dir: "{{ galaxy_root }}/nginx.conf.d"
interactive_environments_proxy_user: "{{ galaxy_user }}"
interactive_environments_access_log_path: "{{ galaxy_log_dir }}/gie_proxy-access.log"
interactive_environments_error_log_path: "{{ galaxy_log_dir }}/gie_proxy-error.log"


## used by: play
containers_yaml:
  containers:
    gie-test:
      type: docker
      host: tcp://149.165.156.130:2376
      force_tlsverify: yes
    _default_:
      type: docker_swarm
      host:
        - tcp://jetstream-tacc0.galaxyproject.org:2376
        - tcp://jetstream-iu0.galaxyproject.org:2376
        - tcp://cvmfs1-psu0.galaxyproject.org:2376
      force_tlsverify: yes
      cpus: 1.0
      memory: 2684354560
      node_prefix: swarm-
      managed: yes
      manager_autostart: no
      manager_conf:
        pid_file: '/srv/galaxy/test/var/swarm_manager.pid'
        log_file: '/srv/galaxy/test/log/swarm_manager.log'
        log_level: DEBUG
        log_environment_variables:
          - USER_EMAIL
        service_wait_time_limit: 10
        slots_min_spare: 2
        spawn_wait_time: 30
        node_idle_limit: 180
        spawn_command: '/srv/galaxy/test/swarmscale/bin/python /srv/galaxy/test/swarmscale/etc/playbook/instance --slots {slots}'
        destroy_command: '/srv/galaxy/test/swarmscale/bin/python /srv/galaxy/test/swarmscale/etc/playbook/instance --destroy {nodes}'
        command_failure_command: "echo '{failed_command}' | mail -s 'swarmscale command failed' naganate@gmail.com"
        terminate_when_idle: no


## used by: galaxyproject.galaxy
base_app_main: &BASE_APP_MAIN

  # message box

  #message_box_visible: "True"
  #message_box_content: 'This Galaxy currently runs experimental version with many bugs, please report them <a target="_blank" href="https://github.com/galaxyproject/galaxy/issues/new">on GitHub</a> or come talk to us about them on <a href="https://gitter.im/galaxyproject/Lobby">Gitter</a>.'
  #message_box_class: warning

  # secrets

  database_connection: "{{ galaxy_config_database_connection }}"
  install_database_connection: "sqlite:////cvmfs/test.galaxyproject.org/var/galaxy_test_install.sqlite?isolation_level=IMMEDIATE"
  id_secret: "{{ galaxy_config_id_secret }}"
  admin_users: "{{ galaxy_config_admin_users }}"
  sentry_dsn: "{{ galaxy_config_sentry_dsn }}"
  sentry_sloreq_threshold: 1.0
  amqp_internal_connection: "{{ galaxy_config_amqp_internal_connection }}"

  # paths

  tool_config_file: "{{ galaxy_config_dir }}/tool_conf.xml,{{ galaxy_shed_tool_conf_file }},{{ galaxy_config_dir }}/nagios_tool_conf.xml,/cvmfs/sandbox.galaxyproject.org/config/shed_tool_conf.xml"
  tool_dependency_dir: "{{ galaxy_tool_dependency_dir }}"
  job_working_directory: "{{ galaxy_job_working_directory }}"
  tool_data_path: /galaxy-repl/test/tool_data
  nginx_upload_store: /galaxy-repl/test/upload
  nginx_upload_job_files_store: /galaxy-repl/test/upload_job_files
  ftp_upload_dir: "{{ galaxy_ftp_upload_dir }}"
  user_library_import_dir: /galaxy-repl/test/ftp
  library_import_dir: /galaxy-repl/test/import
  galaxy_data_manager_data_path: /galaxy-repl/manageddata/data

  tool_sheds_config_file: "{{ galaxy_config_dir }}/tool_sheds_conf.xml"
  tool_data_table_config_path: "{{ galaxy_config_dir }}/tool_data_table_conf.xml"
  build_sites_config_file: "{{ galaxy_config_dir }}/build_sites.yml"
  #datatypes_config_file: "{{ galaxy_config_dir }}/datatypes_conf.xml"
  object_store_config_file: "{{ galaxy_config_dir }}/object_store_conf.xml"
  job_config_file: "{{ galaxy_config_dir }}/job_conf.xml"
  workflow_schedulers_config_file: "{{ galaxy_config_dir }}/workflow_schedulers_conf.xml"
  job_resource_params_file: "{{ galaxy_config_dir }}/job_resource_params_conf.xml"
  data_manager_config_file: "{{ galaxy_config_dir }}/data_manager_conf.xml"
  job_metrics_config_file: "{{ galaxy_config_dir }}/job_metrics_conf.xml"
  dependency_resolvers_config_file: "{{ galaxy_config_dir }}/dependency_resolvers_conf.xml"
  containers_resolvers_config_file: "{{ galaxy_config_dir }}/container_resolvers_conf.yml"

  migrated_tools_config: "/cvmfs/test.galaxyproject.org/config/migrated_tools_conf.xml"
  shed_tool_data_table_config: "/cvmfs/test.galaxyproject.org/config/shed_tool_data_table_conf.xml"
  shed_data_manager_config_file: "/cvmfs/test.galaxyproject.org/config/shed_data_manager_conf.xml"
  integrated_tool_panel_config: "{{ galaxy_mutable_config_dir }}/integrated_tool_panel.xml"
  sanitize_whitelist_file: /galaxy-repl/test/config/sanitize_whitelist.txt

  containers_config_file: "{{ galaxy_config_dir }}/containers.yml"
  enable_beta_containers_interface: "True"

  #environment_setup_file: /galaxy/test/job_env.bash

  builds_file_path: "/cvmfs/data.galaxyproject.org/managed/location/builds.txt"
  # TODO: is this ever read anymore now that we have build_sites.yml?
  ucsc_build_sites: "/cvmfs/data.galaxyproject.org/managed/location/ucsc_build_sites.txt"

  # interactive environments
  interactive_environment_plugins_directory: "{{ interactive_environments_plugins_path }}"
  dynamic_proxy_manage: "False"
  dynamic_proxy_session_map: /srv/galaxy/test/var/gie_proxy_session_map.sqlite
  dynamic_proxy_bind_port: 4280
  dynamic_proxy_bind_ip: 0.0.0.0
  dynamic_proxy_debug: "True"
  dynamic_proxy_external_proxy: "True"
  dynamic_proxy_prefix: gie_proxy
  galaxy_infrastructure_url: https://test.galaxyproject.org
  #trust_ipython_notebook_conversion: "True"

  # general stuff

  database_engine_option_pool_size: 10
  database_engine_option_max_overflow: 20
  database_engine_option_server_side_cursors: "True"
  manage_dependency_relationships: "False"
  len_file_path: /cvmfs/data.galaxyproject.org/managed/len/ucsc
  collect_outputs_from: job_working_directory
  smtp_server: localhost
  error_email_to: galaxy-bugs@galaxyproject.org
  activation_email: "Galaxy Activation <activate@galaxyproject.org>"
  instance_resource_url: "https://galaxyproject.org/support"
  screencasts_url: "https://vimeo.com/galaxyproject"
  search_url: "https://galaxyproject.org/search/"
  blacklist_file: "{{ galaxy_config_dir }}/disposable_email_blacklist.conf"
  registration_warning_message: "Please register only one account. The {{ galaxy_instance_hostname }} service is provided free of charge and has limited computational and data storage resources. <strong>Registration and usage of multiple accounts is tracked and such accounts are subject to termination and data deletion.</strong>"
  user_activation_on: "True"
  activation_grace_period: 6
  inactivity_box_content: "Your account has not been activated yet.  Feel free to browse around and see what's available, but you won't be able to upload data or run jobs until you have verified your email address."
  helpsite_url: "https://help.galaxyproject.org/"
  wiki_url: "https://galaxyproject.org/"
  terms_url: "https://{{ galaxy_instance_hostname }}/static/terms.html"
  ga_code: "UA-45719423-9"
  static_enabled: "False"
  enable_cloud_launch: "True"
  cloudlaunch_default_ami: ami-a7dbf6ce
  nginx_x_accel_redirect_base: /_x_accel_redirect
  nginx_upload_path: /_upload
  nginx_upload_job_files_path: /_job_files
  log_events: "False"
  log_actions: "False"
  debug: "False"
  use_interactive: "False"
  use_pbkdf2: "True"
  allow_user_deletion: "True"
  allow_user_dataset_purge: "True"
  enable_openid: "True"
  ftp_upload_site: "ftp://{{ galaxy_instance_hostname }}"
  enable_quotas: "True"
  track_jobs_in_database: "True"
  retry_metadata_internally: "False"
  retry_job_output_collection: 5
  #metadata_strategy: "legacy"
  #cleanup_job: onsuccess
  cleanup_job: never
  monitor_thread_join_timeout: 60
  allow_user_impersonation: "True"
  max_metadata_value_size: 1000000
  brand: 'Test'
  enable_beta_tool_command_isolation: "True"
  new_user_dataset_access_role_default_private: "True"

  # dependency resolver config
  conda_prefix: "/cvmfs/test.galaxyproject.org/deps/_conda"
  enable_beta_mulled_containers: "True"
  #container_image_cache_path: /cvmfs/sandbox.galaxyproject.org
  #outputs_to_working_directory: "True"

  # For handler heartbeats
  use_heartbeat: "True"
  heartbeat_interval: "-1"
  heartbeat_log: "{{ galaxy_log_dir }}/heartbeat_{server_name}.log"

  # stats
  statsd_host: "127.0.0.1"
  statsd_port: "8125"
  statsd_prefix: "test"

  slow_query_log_threshold: "1"

# galaxy.ini contents
galaxy_config_hash:
  uwsgi:
    # basic settings
    - master: true
    - processes: 8
    - threads: 4

    # uwsgi performance/robustness features
    - single-interpreter: true
    - thunder-lock: true
    - harakiri: 600
    - buffer-size: 16384

    # logging
    - log-maxsize: 134217728
    - log-master-bufsize: 15865856

    # application
    - pythonpath: lib
    - module: galaxy.webapps.galaxy.buildapp:uwsgi_app_factory()

    # zerg mode
    # http://lists.unbit.it/pipermail/uwsgi/2014-October/007683.html
    # this plugin was manually built into the test/main virtualenvs with:
    #   {{ galaxy_venv_dir }}/bin/uwsgi --build-plugin spinningfifo.c
    #   mkdir -p {{ galaxy_venv_dir }}/lib/uwsgi/plugins
    #   mv spinningfifo_plugin.so {{ galaxy_venv_dir }}/lib/uwsgi/plugins
    - plugins-dir: "{{ galaxy_venv_dir }}/lib/uwsgi/plugins"
    - plugin: spinningfifo

    - master-fifo:
      # fifo '0'
      - "{{ galaxy_mutable_data_dir }}/zerg-new.fifo"
      # fifo '1'
      - "{{ galaxy_mutable_data_dir }}/zerg-run.fifo"
      # fifo '2'
      - "{{ galaxy_mutable_data_dir }}/zerg-old.fifo"

    # attach to zerg
    - zerg: "{{ galaxy_mutable_data_dir }}/zergpool.sock"

    # we do not kill the old sleeping instance since supervisor is managing the start/stop
    # force the currently running instance to became sleeping (slot 2) and place it in pause mode
    - if-exists:
      - "{{ galaxy_mutable_data_dir }}/zerg-run.fifo"
      - hook-accepting1-once: writefifo:{{ galaxy_mutable_data_dir }}/zerg-run.fifo 2q
    # force this instance to became the running one (slot 1)
    - hook-accepting1-once: spinningfifo:{{ galaxy_mutable_data_dir }}/zerg-new.fifo 1

  galaxy:
    <<: *BASE_APP_MAIN
    new_file_path: /galaxy-repl/test/scratch

datamanager_config_hash:
  uwsgi:
    - socket: 127.0.0.1:9998
    - master: true
    - processes: 1
    - threads: 4
    - buffer-size: 16384
    - pythonpath: lib
    - module: galaxy.webapps.galaxy.buildapp:uwsgi_app_factory()

  galaxy:
    <<: *BASE_APP_MAIN
    base_server_name: datamanager
    new_file_path: /galaxy-repl/test/data-scratch

# specifies config files to copy from the playbook
galaxy_config_files:
  - src: files/galaxy/config/tool_data_table_conf.xml
    dest: "{{ galaxy_config[galaxy_app_config_section]['tool_data_table_config_path'] }}"
  - src: files/galaxy/config/tool_conf.xml
    dest: "{{ galaxy_config_dir }}/tool_conf.xml"
  - src: files/galaxy/config/nagios_tool_conf.xml
    dest: "{{ galaxy_config_dir }}/nagios_tool_conf.xml"
  - src: files/galaxy/config/object_store_conf.xml
    dest: "{{ galaxy_config[galaxy_app_config_section]['object_store_config_file'] }}"
  - src: files/galaxy/config/data_manager_conf.xml
    dest: "{{ galaxy_config[galaxy_app_config_section]['data_manager_config_file'] }}"
  - src: files/galaxy/config/tool_sheds_conf.xml
    dest: "{{ galaxy_config[galaxy_app_config_section]['tool_sheds_config_file'] }}"
  - src: files/galaxy/config/job_metrics_conf.xml
    dest: "{{ galaxy_config[galaxy_app_config_section]['job_metrics_config_file'] }}"
  - src: files/galaxy/config/job_resource_params_conf.xml
    dest: "{{ galaxy_config[galaxy_app_config_section]['job_resource_params_file'] }}"
  - src: files/galaxy/config/dependency_resolvers_conf.xml
    dest: "{{ galaxy_config[galaxy_app_config_section]['dependency_resolvers_config_file'] }}"
  - src: files/galaxy/config/container_resolvers_conf.yml
    dest: "{{ galaxy_config[galaxy_app_config_section]['containers_resolvers_config_file'] }}"
  - src: files/galaxy/config/pulsar_stampede_actions.yml
    dest: "{{ galaxy_config_dir }}/pulsar_stampede_actions.yml"
  - src: files/galaxy/config/pulsar_bridges_actions.yml
    dest: "{{ galaxy_config_dir }}/pulsar_bridges_actions.yml"
  - src: files/galaxy/config/pulsar_jetstream.yml
    dest: "{{ galaxy_config_dir }}/pulsar_jetstream.yml"
  - src: files/galaxy/config/pulsar_jetstream_actions.yml
    dest: "{{ galaxy_config_dir }}/pulsar_jetstream_actions.yml"
  - src: files/galaxy/config/disposable_email_blacklist.conf
    dest: "{{ galaxy_config[galaxy_app_config_section]['blacklist_file'] }}"
  - src: files/galaxy/config/workflow_schedulers_conf.xml
    dest: "{{ galaxy_config_dir }}/workflow_schedulers_conf.xml"

# specifies config files to template from the playbook
galaxy_config_templates:
  - src: templates/galaxy/config/job_conf.xml.j2
    dest: "{{ galaxy_config_dir }}/job_conf.xml"
  - src: templates/galaxy/config/build_sites.yml.j2
    dest: "{{ galaxy_config[galaxy_app_config_section]['build_sites_config_file'] }}"
  - src: templates/galaxy/config/reports.ini.j2
    dest: "{{ galaxy_config_dir }}/reports.ini"
