---

## these vars are defined in vault.yml
#
## used by: galaxy_config var
galaxy_config_database_connection: "{{ vault_galaxy_config_database_connection }}"
galaxy_config_admin_users: "{{ vault_galaxy_config_admin_users }}"
galaxy_config_id_secret: "{{ vault_galaxy_config_id_secret }}"
galaxy_config_sentry_dsn: "{{ vault_galaxy_config_sentry_dsn }}"
galaxy_config_amqp_internal_connection: "{{ vault_galaxy_config_amqp_internal_connection }}"


galaxy_root: "/srv/galaxy/{{ galaxy_instance_codename }}"
galaxy_new_file_path: "/galaxy-repl/{{ galaxy_instance_codename }}/scratch"
galaxy_job_working_directory: "/galaxy-repl/{{ galaxy_instance_codename }}/jobdir"
galaxy_ftp_upload_dir: "/galaxy-repl/{{ galaxy_instance_codename }}/ftp"
interactive_environments_plugins_path: "{{ galaxy_root }}/interactive_environments/plugins"
galaxy_tool_dependency_dir: "/galaxy/{{ galaxy_instance_codename }}/deps"
galaxy_file_path: "{{ galaxy_mutable_data_dir }}/datasets"
galaxy_log_dir: "{{ galaxy_root }}/log"
galaxy_tool_cache_data_dir: "/srv/galaxy/{{ galaxy_instance_codename }}/var/tool_cache"
galaxy_tool_search_index_dir: "/srv/galaxy/{{ galaxy_instance_codename }}/var/tool_search_index"
galaxy_object_store_cache_path: "/galaxy-repl/{{ galaxy_instance_codename }}/object_store_cache"


## used by: galaxyproject.galaxy
base_app_main: &BASE_APP_MAIN

  # message box

  #message_box_visible: "True"
  #message_box_content: 'This Galaxy currently runs experimental version with many bugs, please report them <a target="_blank" href="https://github.com/galaxyproject/galaxy/issues/new">on GitHub</a> or come talk to us about them on <a href="https://gitter.im/galaxyproject/Lobby">Gitter</a>.'
  #message_box_class: warning

  # secrets

  database_connection: "{{ galaxy_config_database_connection }}"
  install_database_connection: "sqlite:////cvmfs/test.galaxyproject.org/var/galaxy_test_install.sqlite?isolation_level=IMMEDIATE"
  id_secret: "{{ galaxy_config_id_secret }}"
  admin_users: "{{ galaxy_config_admin_users }}"
  sentry_dsn: "{{ galaxy_config_sentry_dsn }}"
  sentry_sloreq_threshold: 10.0
  amqp_internal_connection: "{{ galaxy_config_amqp_internal_connection }}"

  # logging
  logging:
    filters:
      stack:
        (): galaxy.web_stack.application_stack_log_filter
    formatters:
      stack:
        (): galaxy.web_stack.application_stack_log_formatter
    handlers:
      console:
        class: logging.StreamHandler
        filters:
        - stack
        formatter: stack
        level: DEBUG
        stream: ext://sys.stderr
    loggers:
      paste.httpserver.ThreadPool:
        level: WARN
        qualname: paste.httpserver.ThreadPool
      routes.middleware:
        level: WARN
        qualname: routes.middleware
      amqp:
        level: INFO
        qualname: amqp
      dogpile:
        level: INFO
        qualname: dogpile
      irods:
        level: INFO
        qualname: irods
    root:
      handlers:
      - console
      level: DEBUG
    disable_existing_loggers: false
    version: 1

  # paths

  tool_config_file: "{{ galaxy_config_dir }}/tool_conf.xml,{{ galaxy_shed_tool_conf_file }},{{ galaxy_config_dir }}/nagios_tool_conf.xml,/cvmfs/sandbox.galaxyproject.org/config/shed_tool_conf.xml"
  tool_dependency_dir: "{{ galaxy_tool_dependency_dir }}"
  job_working_directory: "{{ galaxy_job_working_directory }}"
  tool_data_path: /galaxy-repl/test/tool_data
  nginx_upload_store: /galaxy-repl/test/upload
  nginx_upload_job_files_store: /galaxy-repl/test/upload_job_files
  ftp_upload_dir: "{{ galaxy_ftp_upload_dir }}"
  user_library_import_dir: /galaxy-repl/test/ftp
  library_import_dir: /galaxy-repl/test/import
  galaxy_data_manager_data_path: /galaxy-repl/manageddata/data
  tool_cache_data_dir: "{{ galaxy_tool_cache_data_dir }}"
  tool_search_index_dir: "{{ galaxy_tool_search_index_dir }}"

  tool_sheds_config_file: "{{ galaxy_config_dir }}/tool_sheds_conf.xml"
  tool_data_table_config_path: "{{ galaxy_config_dir }}/tool_data_table_conf.xml"
  build_sites_config_file: "{{ galaxy_config_dir }}/build_sites.yml"
  #datatypes_config_file: "{{ galaxy_config_dir }}/datatypes_conf.xml"
  object_store_config_file: "{{ galaxy_config_dir }}/object_store_conf.xml"
  oidc_backends_config_file: "{{ galaxy_config_dir }}/oidc_backends_config.xml"
  job_config_file: "{{ galaxy_config_dir }}/job_conf.xml"
  workflow_schedulers_config_file: "{{ galaxy_config_dir }}/workflow_schedulers_conf.xml"
  job_resource_params_file: "{{ galaxy_config_dir }}/job_resource_params_conf.xml"
  data_manager_config_file: "{{ galaxy_config_dir }}/data_manager_conf.xml"
  job_metrics_config_file: "{{ galaxy_config_dir }}/job_metrics_conf.xml"
  dependency_resolvers_config_file: "{{ galaxy_config_dir }}/dependency_resolvers_conf.xml"
  containers_resolvers_config_file: "{{ galaxy_config_dir }}/container_resolvers_conf.yml"

  migrated_tools_config: "/cvmfs/test.galaxyproject.org/config/migrated_tools_conf.xml"
  shed_tool_data_table_config: "/cvmfs/test.galaxyproject.org/config/shed_tool_data_table_conf.xml"
  shed_data_manager_config_file: "/cvmfs/test.galaxyproject.org/config/shed_data_manager_conf.xml"
  integrated_tool_panel_config: "{{ galaxy_mutable_config_dir }}/integrated_tool_panel.xml"
  sanitize_whitelist_file: /galaxy-repl/test/config/sanitize_whitelist.txt

  containers_config_file: "{{ galaxy_config_dir }}/containers.yml"
  enable_beta_containers_interface: "True"

  #environment_setup_file: /galaxy/test/job_env.bash

  builds_file_path: "/cvmfs/data.galaxyproject.org/managed/location/builds.txt"
  # TODO: is this ever read anymore now that we have build_sites.yml?
  ucsc_build_sites: "/cvmfs/data.galaxyproject.org/managed/location/ucsc_build_sites.txt"

  # interactive environments
  interactive_environment_plugins_directory: "{{ interactive_environments_plugins_path }}"
  dynamic_proxy_manage: "False"
  dynamic_proxy_session_map: /srv/galaxy/test/var/gie_proxy_session_map.sqlite
  dynamic_proxy_bind_port: 4280
  dynamic_proxy_bind_ip: 0.0.0.0
  dynamic_proxy_debug: "True"
  dynamic_proxy_external_proxy: "True"
  dynamic_proxy_prefix: gie_proxy
  galaxy_infrastructure_url: https://test.galaxyproject.org
  #trust_ipython_notebook_conversion: "True"

  # general stuff

  database_engine_option_pool_size: 10
  database_engine_option_max_overflow: 20
  database_engine_option_server_side_cursors: "True"
  manage_dependency_relationships: "False"
  len_file_path: /cvmfs/data.galaxyproject.org/managed/len/ucsc
  collect_outputs_from: job_working_directory
  smtp_server: localhost
  error_email_to: galaxy-bugs@galaxyproject.org
  activation_email: "Galaxy Activation <activate@galaxyproject.org>"
  instance_resource_url: "https://galaxyproject.org/support"
  screencasts_url: "https://vimeo.com/galaxyproject"
  search_url: "https://galaxyproject.org/search/"
  blacklist_file: "{{ galaxy_config_dir }}/disposable_email_blacklist.conf"
  registration_warning_message: "Please register only one account. The {{ galaxy_instance_hostname }} service is provided free of charge and has limited computational and data storage resources. <strong>Registration and usage of multiple accounts is tracked and such accounts are subject to termination and data deletion.</strong>"
  user_activation_on: "True"
  activation_grace_period: 6
  inactivity_box_content: "Your account has not been activated yet.  Feel free to browse around and see what's available, but you won't be able to upload data or run jobs until you have verified your email address."
  helpsite_url: "https://help.galaxyproject.org/"
  wiki_url: "https://galaxyproject.org/"
  terms_url: "https://{{ galaxy_instance_hostname }}/static/terms.html"
  ga_code: "UA-45719423-9"
  static_enabled: "False"
  enable_cloud_launch: "True"
  cloudlaunch_default_ami: ami-a7dbf6ce
  nginx_x_accel_redirect_base: /_x_accel_redirect
  nginx_upload_path: /_upload
  nginx_upload_job_files_path: /_job_files
  log_events: "False"
  log_actions: "False"
  debug: "False"
  use_interactive: "False"
  use_pbkdf2: "True"
  allow_user_deletion: "True"
  allow_user_dataset_purge: "True"
  enable_openid: "True"
  ftp_upload_site: "ftp://{{ galaxy_instance_hostname }}"
  enable_quotas: "True"
  track_jobs_in_database: "True"
  retry_metadata_internally: "False"
  retry_job_output_collection: 5
  #metadata_strategy: "legacy"
  #cleanup_job: onsuccess
  cleanup_job: never
  monitor_thread_join_timeout: 60
  cache_user_job_count: "True"
  allow_user_impersonation: "True"
  max_metadata_value_size: 1000000
  brand: 'Test'
  enable_beta_tool_command_isolation: "True"
  new_user_dataset_access_role_default_private: "True"
  tool_name_boost: 12
  tool_section_boost: 5
  #tool_description_bost: 40
  #tool_label_boost: 1
  #tool_stub_boost: 1
  #tool_help_boost: 1
  tool_search_limit: 30
  tool_enable_ngram_search: "True"
  tool_ngram_minsize: 3
  tool_ngram_maxsize: 4
  

  # dependency resolver config
  conda_prefix: "/cvmfs/test.galaxyproject.org/deps/_conda"
  enable_beta_mulled_containers: "True"
  #container_image_cache_path: /cvmfs/sandbox.galaxyproject.org
  #outputs_to_working_directory: "True"

  mulled_resolution_cache_data_dir: "{{ galaxy_mutable_data_dir }}/mulled/data"
  mulled_resolution_cache_lock_dir: "{{ galaxy_mutable_data_dir }}/mulled/lock"

  # For handler heartbeats
  use_heartbeat: "True"
  heartbeat_interval: "-1"
  heartbeat_log: "{{ galaxy_log_dir }}/heartbeat_{server_name}.log"

  # stats
  statsd_host: "127.0.0.1"
  statsd_port: "8125"
  statsd_prefix: "test"

  slow_query_log_threshold: "1"

# galaxy.ini contents
galaxy_config_hash:
  uwsgi:
    # basic settings
    - master: true
    - processes: 8
    - threads: 4

    # uwsgi performance/robustness features
    - single-interpreter: true
    - thunder-lock: true
    - harakiri: 600
    - buffer-size: 16384

    # logging
    - log-maxsize: 134217728
    - log-master-bufsize: 15865856

    # application
    - pythonpath: lib
    - module: galaxy.webapps.galaxy.buildapp:uwsgi_app_factory()

    # spinningfifo was added to uWSGI-core in 2.0.15
    #- plugins-dir: "{{ galaxy_venv_dir }}/lib/uwsgi/plugins"
    #- plugin: spinningfifo

    # zerg mode
    - master-fifo:
      # fifo '0'
      - "{{ galaxy_mutable_data_dir }}/zerg-new.fifo"
      # fifo '1'
      - "{{ galaxy_mutable_data_dir }}/zerg-run.fifo"
      # fifo '2'
      - "{{ galaxy_mutable_data_dir }}/zerg-old.fifo"

    # attach to zerg
    - zerg: "{{ galaxy_mutable_data_dir }}/zergpool.sock"

    # signal the currently running instance to release the running fifo and terminate
    - if-exists:
      - "{{ galaxy_mutable_data_dir }}/zerg-run.fifo"
      - hook-accepting1-once: writefifo:{{ galaxy_mutable_data_dir }}/zerg-run.fifo 2q
    # force this instance to became the running one (slot 1)
    - hook-accepting1-once: spinningfifo:{{ galaxy_mutable_data_dir }}/zerg-new.fifo 1

  galaxy:
    <<: *BASE_APP_MAIN
    new_file_path: "{{ galaxy_new_file_path }}"

datamanager_config_hash:
  uwsgi:
    - socket: 127.0.0.1:9998
    - master: true
    - processes: 1
    - threads: 4
    - buffer-size: 16384
    - pythonpath: lib
    - module: galaxy.webapps.galaxy.buildapp:uwsgi_app_factory()

  galaxy:
    <<: *BASE_APP_MAIN
    base_server_name: datamanager
    new_file_path: /galaxy-repl/test/data-scratch

# specifies config files to template from the playbook
#galaxy_config_templates:
#  - src: templates/galaxy/config/job_conf.xml.j2
#    dest: "{{ galaxy_config_dir }}/job_conf.xml"
