---

kubedeployer_kubeconfig: "{{ vault_kubedeployer_kubeconfig }}"
tailscale_authkey: "{{ vault_tailscale_authkey }}"
tailscale_subnet_routes: 10.42.0.0/16,10.43.0.0/16

kubernetes_deploy_resources:

  - label: tailscale-auth secret
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: tailscale-auth
        namespace: default
      stringData:
        TS_AUTH_KEY: "{{ tailscale_authkey }}"

  - label: tailscale-auth role
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: tailscale
        namespace: default
      rules:
      - apiGroups: [""] # "" indicates the core API group
        resources: ["secrets"]
        # Create can not be restricted to a resource name.
        verbs: ["create"]
      - apiGroups: [""] # "" indicates the core API group
        resourceNames: ["tailscale-auth"]
        resources: ["secrets"]
        verbs: ["get", "update"]

  - label: tailscale-auth rolebinding
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: tailscale
        namespace: default
      subjects:
      - kind: ServiceAccount
        name: tailscale
      roleRef:
        kind: Role
        name: tailscale
        apiGroup: rbac.authorization.k8s.io

  - label: tailscale serviceaccount
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: tailscale
        namespace: default

  - label: tailscale deployment
    definition:
      apiVersion: v1
      kind: Deployment
      metadata:
        name: subnet-router
        namespace: default
      labels:
        app: tailscale
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: tailscale
        template:
          metadata:
            labels:
              app: tailscale
          spec:
            serviceAccountName: tailscale
            containers:
            - name: tailscale
              imagePullPolicy: Always
              image: "ghcr.io/tailscale/tailscale:latest"
              env:
              # Store the state in a k8s secret
              - name: TS_KUBE_SECRET
                value: tailscale-auth
              - name: TS_USERSPACE
                value: "true"
              - name: TS_AUTH_KEY
                valueFrom:
                  secretKeyRef:
                    name: tailscale-auth
                    key: AUTH_KEY
                    optional: true
              - name: TS_ROUTES
                value: "{{ tailscale_subnet_routes }}"
              securityContext:
                runAsUser: 1000
                runAsGroup: 1000
