---

- name: Fetch current Galaxy commit hash
  command: "/usr/bin/git rev-parse HEAD"
  args:
    chdir: /cvmfs/{{ galaxy_cvmfs_repo }}/galaxy
  register: galaxy_commit_old

- name: Fetch HEAD commit hash
  uri:
    url: "https://api.github.com/repos/{{ galaxy_repo_owner }}/galaxy/branches/{{ galaxy_branch }}"
    return_content: yes
  register: branch_response
  when: galaxy_branch is defined

- name: Set upstream_galaxy_commit fact
  set_fact:
    upstream_galaxy_commit: "{{ branch_response.json.commit.sha }}"
  when: galaxy_branch is defined

- name: Exit if no changes (branch mode)
  fail:
    msg: The clone at /cvmfs/{{ galaxy_cvmfs_repo }}/galaxy is already at the HEAD of {{ galaxy_repo_owner }}/galaxy@{{ galaxy_branch }} ({{ upstream_galaxy_commit }})
  when: galaxy_branch is defined and galaxy_commit_old.stdout == upstream_galaxy_commit

- name: Exit if no changes (ref mode)
  fail:
    msg: The clone at /cvmfs/{{ galaxy_cvmfs_repo }}/galaxy is already at {{ galaxy_ref }})
  when: galaxy_ref is defined and galaxy_commit_old.stdout == galaxy_ref

- name: Begin CVMFS transaction
  command: /usr/bin/cvmfs_server transaction {{ galaxy_cvmfs_repo }}

- name: CVMFS transaction context
  block:

    - name: Update Galaxy
      #command: "docker run --rm -v /cvmfs:/cvmfs galaxy/update su - {{ galaxy_user }} -c \"/cvmfs/{{ galaxy_cvmfs_repo }}/bin/update_galaxy.sh {{ '-r ' ~ galaxy_ref if galaxy_ref is defined else '' }} {{ '-b ' ~ galaxy_branch if galaxy_branch is defined else '' }} {{ '-o ' ~ galaxy_repo_owner if galaxy_repo_owner != 'galaxyproject' else '' }}\""
      script: update_galaxy.sh {{ '-r ' ~ galaxy_ref if galaxy_ref is defined else '' }} {{ '-b ' ~ galaxy_branch if galaxy_branch is defined else '' }} {{ '-o ' ~ galaxy_repo_owner if galaxy_repo_owner != 'galaxyproject' else '' }} {{ '-c ' ~ galaxy_conda_env if galaxy_conda_env is defined else '' }} {{ galaxy_cvmfs_repo }}

    - name: Clean and build Python bytecode
      script: makepyc.py /cvmfs/{{ galaxy_cvmfs_repo }}/galaxy/lib

    # TODO: In Ansible 2.4 this can use docker_container (--rm support was not available in 2.3)
    - name: Fetch Galaxy version
      command: "/usr/bin/docker run --rm -v /cvmfs:/cvmfs -e PYTHONPATH=/cvmfs/{{ galaxy_cvmfs_repo }}/galaxy/lib --user {{ galaxy_user }} galaxy/update {{ galaxy_venv_dir }}/bin/python -c 'from galaxy.version import VERSION; print(VERSION)'"
      register: version_response

    - name: Set galaxy_version fact
      set_fact:
        galaxy_version: "{{ version_response.stdout }}"

    - name: Fetch new Galaxy commit hash
      command: "/usr/bin/git rev-parse HEAD"
      args:
        chdir: /cvmfs/{{ galaxy_cvmfs_repo }}/galaxy
      register: galaxy_commit_out

    - name: Set galaxy_commit fact
      set_fact:
        galaxy_commit: "{{ galaxy_commit_out.stdout }}"

    - name: Store updated version information
      local_action:
        module: copy
        # Fixme: should probably use to_nice_yaml
        content: |
          ---
          galaxy_version: {{ galaxy_version }}
          galaxy_commit: {{ galaxy_commit }}
        dest: "{{ galaxy_version_file }}"

    - name: Build client
      include: _inc_client_build.yml
      when: galaxy_cvmfs_client_on_update is defined and galaxy_cvmfs_client_on_update

    - name: Publish CVMFS transaction
      command: /usr/bin/cvmfs_server publish -a "galaxy_{{ galaxy_version }}_{{ galaxy_commit | truncate(7, True, '') }}" -m "Update Galaxy to version {{ galaxy_version }} commit {{ galaxy_commit }} via Ansible" {{ galaxy_cvmfs_repo }}

  rescue:

    - name: Abort CVMFS transaction
      command: /usr/bin/cvmfs_server abort -f {{ galaxy_cvmfs_repo }}

    - name: Abort playbook
      fail:
        msg: Updating Galaxy failed
