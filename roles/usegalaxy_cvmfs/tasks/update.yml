---

- name: Create temporary Galaxy config
  tempfile:
    prefix: usegalaxy_cvmfs_galaxy_config_
    suffix: ".{{ 'ini' if galaxy_config_style == 'ini-paste' else galaxy_config_style }}"
  register: __usegalaxy_cvmfs_galaxy_config_result

- name: Begin CVMFS transaction
  command: /usr/bin/cvmfs_server transaction {{ galaxy_cvmfs_repo }}

- name: CVMFS transaction context
  block:

    - name: Update Galaxy
      import_role:
        name: galaxyproject.galaxy
      vars:
        galaxy_config_dir: null
        galaxy_shed_tools_dir: null
        galaxy_config_file: "{{ __usegalaxy_cvmfs_galaxy_config_result.path }}"
        galaxy_backup_configfiles: false

        galaxy_manage_clone: true
        galaxy_manage_download: false
        galaxy_manage_static_setup: true  # only used to template the config for conditional deps
        galaxy_fetch_dependencies: true
        galaxy_manage_mutable_setup: false
        galaxy_manage_database: false
        galaxy_build_client: true
        galaxy_manage_errordocs: false

    - name: Abort if there were no changes
      assert:
        that:
          - __galaxy_git_update_result is changed
        success_msg: "Changes were made, transaction will be published"
        fail_msg: "No changes were made, transaction will be aborted"

    - name: Remove node_modules
      file:
        path: "{{ galaxy_server_dir }}/client/node_modules"
        state: absent
      diff: false

    - name: Find plugin node_modules
      find:
        paths: "{{ galaxy_server_dir }}/config/plugins"
        depth: 4    # should get plugins in plugin collection dirs
        patterns: '^node_modules$'
        file_type: directory
      register: __galaxy_node_modules_dirs_result

    - name: Remove plugin node_modules
      file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ __galaxy_node_modules_dirs_result.files }}"

    # TODO: In Ansible 2.4 this can use docker_container (--rm support was not available in 2.3)
    - name: Fetch Galaxy version
      #command: "/usr/bin/docker run --rm -v /cvmfs:/cvmfs -e PYTHONPATH=/cvmfs/{{ galaxy_cvmfs_repo }}/galaxy/lib --user {{ galaxy_user }} galaxy/update {{ galaxy_venv_dir }}/bin/python -c 'from galaxy.version import VERSION; print(VERSION)'"
      command: "{{ galaxy_venv_dir }}/bin/python -c 'from galaxy.version import VERSION; print(VERSION)'"
      environment:
        PYTHONPATH: "/cvmfs/{{ galaxy_cvmfs_repo }}/galaxy/lib"
      register: version_response

    - name: Add galaxy-set-metadata script
      ansible.builtin.copy:
        src: galaxy-set-metadata
        dest: "{{ galaxy_venv_dir }}/bin/galaxy-set-metadata"
        mode: 0755

    - name: Set galaxy_version fact
      set_fact:
        galaxy_version: "{{ version_response.stdout }}"

    - name: Fetch new Galaxy commit hash
      command: "/usr/bin/git rev-parse HEAD"
      args:
        chdir: /cvmfs/{{ galaxy_cvmfs_repo }}/galaxy
      register: galaxy_commit_out

    - name: Set galaxy_commit fact
      set_fact:
        galaxy_commit: "{{ galaxy_commit_out.stdout }}"

    - name: Store updated version information
      local_action:
        module: copy
        # Fixme: should probably use to_nice_yaml
        content: |
          ---
          galaxy_version: {{ galaxy_version }}
          galaxy_commit: {{ galaxy_commit }}
        dest: "{{ galaxy_version_file }}"

    - name: Publish CVMFS transaction
      command: /usr/bin/cvmfs_server publish -a "galaxy_{{ galaxy_version }}_{{ galaxy_commit | truncate(7, True, '') }}" -m "Update Galaxy to version {{ galaxy_version }} commit {{ galaxy_commit }} via Ansible" {{ galaxy_cvmfs_repo }}

  rescue:

    - name: Abort CVMFS transaction
      command: /usr/bin/cvmfs_server abort -f {{ galaxy_cvmfs_repo }}

    - name: Abort playbook
      fail:
        msg: Exiting due to previous errors

  always:

    - name: Remove temporary Galaxy config
      file:
        path: "{{ __usegalaxy_cvmfs_galaxy_config_result.path }}"
        state: absent
